// Place your settings in this file to overwrite the default settings
{
  // dhoeric.ansible-vault
  "ansibleVault.keyfile": "~/.ansible-vault-pass",

  // streetsidesoftware.code-spell-checker
  "cSpell.enabled": true,
  "cSpell.enableFiletypes": [
    "Log",
    "ansible",
    "azcli",
    "azure-pipelines",
    "bat",
    "clojure",
    "code-text-binary",
    "coffeescript",
    "cuda-cpp",
    "dart",
    "diff",
    "dockercompose",
    "dockerfile",
    "dotenv",
    "fsharp",
    "git-rebase",
    "gradle",
    "groovy",
    "gsp",
    "helm",
    "hlsl",
    "hosts",
    "ignore",
    "ini",
    "jq",
    "jsx-tags",
    "julia",
    "juliamarkdown",
    "jvmoptions",
    "log",
    "lua",
    "makefile",
    "markdown-math",
    "objective-c",
    "objective-cpp",
    "perl",
    "perl6",
    "powershell",
    "properties",
    "r",
    "razor",
    "ruby",
    "scminput",
    "search-result",
    "shaderlab",
    "shellscript",
    "sql",
    "swift",
    "terraform",
    "terraform-vars",
    "toml",
    "vb",
    "xml",
    "xsl",
    "zip"
  ],
  "cSpell.userWords": [
    "alicloud",
    "aliyun",
    "aliyuncs",
    "ansible",
    "archlinux",
    "auths",
    "autoscale",
    "Autoscaler",
    "azcopy",
    "azurecr",
    "azurefile",
    "azurerm",
    "backoff",
    "browserslist",
    "btmp",
    "chdir",
    "chinacloudapi",
    "classpath",
    "cmyk",
    "CNAME",
    "containerd",
    "cooldown",
    "couchbase",
    "cygwin",
    "dacpac",
    "deallocated",
    "devel",
    "distutils",
    "dnat",
    "dockerconfigjson",
    "dockerignore",
    "dotglob",
    "echarts",
    "eclipselink",
    "elif",
    "embeddable",
    "endfor",
    "entrypoint",
    "epel",
    "esac",
    "failover",
    "fileglob",
    "firewalld",
    "formatlist",
    "forwarding",
    "fqcn",
    "fullchain",
    "fullname",
    "geoip",
    "github",
    "gradle",
    "grafana",
    "grammage",
    "grpcs",
    "hashicorp",
    "healthcheck",
    "healthchecks",
    "healthz",
    "hostvars",
    "hyperscale",
    "instanceof",
    "ispn",
    "jakartaee",
    "javadoc",
    "javax",
    "jaxb",
    "jboss",
    "jdbc",
    "jdwp",
    "JMES",
    "jndi",
    "jwks",
    "keda",
    "keepalive",
    "keycloak",
    "kube",
    "kubeconfig",
    "kubectl",
    "kubelet",
    "kubernetes",
    "lastb",
    "lazyload",
    "lineinfile",
    "linuxbrew",
    "localtime",
    "luarocks",
    "mailtos",
    "mbps",
    "mgmt",
    "minikube",
    "miniprogram",
    "mkdir",
    "mssql",
    "multitenant",
    "multivalued",
    "neovim",
    "netfilter",
    "nindent",
    "noconfirm",
    "nofile",
    "noout",
    "nuget",
    "oidc",
    "OLDPWD",
    "omni",
    "omnisaas",
    "oneshot",
    "openapi",
    "openjdk",
    "outdent",
    "pipefail",
    "pipenv",
    "pipfile",
    "plugin",
    "popd",
    "port",
    "postprint",
    "postrouting",
    "prerouting",
    "prinergy",
    "privkey",
    "proto",
    "proxied",
    "Pubkey",
    "publickey",
    "pushd",
    "pwsh",
    "pypi",
    "querystring",
    "ratelimit",
    "realpath",
    "rebalance",
    "redir",
    "referer",
    "remoting",
    "restylane",
    "retryable",
    "roadmap",
    "rockspec",
    "rsql",
    "saas",
    "scrollback",
    "sencha",
    "servlet",
    "setsubtract",
    "setvariable",
    "shopt",
    "skillset",
    "skopeo",
    "snat",
    "sshrc",
    "stakater",
    "strapi",
    "strftime",
    "substr",
    "swapfile",
    "symlink",
    "symlinks",
    "TENCENT",
    "terragrunt",
    "testcab",
    "tfenv",
    "tfstate",
    "tfvars",
    "tolerations",
    "tonumber",
    "toolchain",
    "toset",
    "Traceback",
    "trunc",
    "unmarshal",
    "unplaceable",
    "upsert",
    "upstreams",
    "varchar",
    "venv",
    "virtualenv",
    "vmss",
    "vnet",
    "wechat",
    "wildfly",
    "workdir",
    "WXML",
    "WXSS",
    "yamldecode"
  ],

  "diffEditor.codeLens": true,
  "diffEditor.ignoreTrimWhitespace": false,
  "diffEditor.renderSideBySide": false,

  "editor.bracketPairColorization.enabled": true,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,

  "editor.guides.bracketPairs": true,

  "editor.inlayHints.enabled": "offUnlessPressed",

  "editor.mouseWheelZoom": true,

  "editor.renderFinalNewline": true,

  // Controls whether the editor should render indent guides
  "editor.renderIndentGuides": true,

  // Controls how the editor should render whitespace characters, possibilities are 'none', 'boundary', and 'all'. The 'boundary' option does not render single spaces between words.
  "editor.renderWhitespace": "boundary",

  "editor.rulers": [ 80, 120, 160 ],

  "editor.semanticHighlighting.enabled": true,

  // The number of spaces a tab is equal to. This setting is overriden based on the file contents when `editor.detectIndentation` is on.
  "editor.tabSize": 2,

  // Controls whether the explorer should render folders in a compact form. In such a form, single child folders will be compressed in a combined tree element. Useful for Java package structures, for example.
  "explorer.compactFolders": false,
  // Controls if the explorer should ask for confirmation when deleting a file via the trash.
  "explorer.confirmDelete": false,
  // Controls if the explorer should ask for confirmation to move files and folders via drag and drop.
  "explorer.confirmDragAndDrop": false,

  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.patterns": {
    "*.ts": "${capture}.js",
    "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
    "*.jsx": "${capture}.js",
    "*.tsx": "${capture}.ts",
    "tsconfig.json": "tsconfig.*.json",
    "package.json": "package-lock.json, yarn.lock",
    ".env": ".env.*",
    "*": "${basename}.*.${extname}"
  },

  "explorer.openEditors.minVisible": 9,
  "explorer.openEditors.visible": 99,

  "files.associations": {
    // Ansible playbook
    "**/ansible/**/*.{yml,yaml}": "ansible",
    // Ansible vars
    "**/{group_vars,host_vars}/**": "ansible",
    // Kubernetes
    "kubeconfig": "yaml",
    "*.kubeconfig": "yaml",
  },

  "files.autoSave": "off",

  // Configure glob patterns for excluding files and folders.
  "files.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/.DS_Store": true,
    "**/*~": true
  },

  "git.autofetch": true,
  "git.ignoreLimitWarning": true,

  // GitLens
  "gitlens.advanced.fileHistoryFollowsRenames": true,
  "gitlens.blame.ignoreWhitespace": true,
  "gitlens.currentLine.enabled": false,
  "gitlens.keymap": "alternate",

  // Groovy
  "groovyLint.insight.enable": false,

  // Java
  "java.configuration.checkProjectSettingsExclusions": false,
  "java.implementationsCodeLens.enabled": true,
  "java.referencesCodeLens.enabled": true,

  // JavaScript
  "javascript.inlayHints.enumMemberValues.enabled": true,
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "javascript.inlayHints.parameterNames.enabled": "all",
  "javascript.inlayHints.parameterTypes.enabled": true,
  "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
  "javascript.inlayHints.variableTypes.enabled": true,

  "material-icon-theme.files.associations": {
    // Ansible
    "requirements.yml": "credits",
    "vault.yml": "lock",
  },
  "material-icon-theme.folders.associations": {
    // Ansible
    "group_vars": "ansible",
    "host_vars": "ansible",
    "inventories": "ansible",
    "defaults": "mappings",
    "vars": "mappings",
    "files": "template",
    "roles": "template",
    // CI
    "pipelines": "ci",
    // Config
    "etc": "config",
    // DevOps
    "devops": "project",
    // Helm
    "charts": "kubernetes",
  },
  "material-icon-theme.languages.associations": {
  },

  "redhat.telemetry.enabled": false,

  "remote.autoForwardPortsSource": "process",

  // Remote VSCode
  // @ext:rafaelmaiolla.remote-vscode
  "remote.dontShowPortAlreadyInUseError": true,
  "remote.host": "127.0.0.1",

  // Remote - SSH
  //"remote.SSH.path": "C:\\tools\\cygwin\\bin\\ssh.exe",
  "remote.SSH.connectTimeout": 30,
  "remote.SSH.useLocalServer": true,

  // For macOS, it's command+k for chords, and does not conflict with ctrl+k in terminal.
  "terminal.integrated.allowChords": true,
  "terminal.integrated.commandsToSkipShell": [
    "-workbench.action.files.newUntitledFile",  // ctrl+n
    "-workbench.action.quickOpen",              // ctrl+p
    "-workbench.action.terminal.copySelection", // ctrl+c
    "-workbench.action.terminal.focusFind",     // ctrl+f
    "-workbench.action.terminal.killEditor",    // ctrl+w
    "-workbench.action.terminal.paste",         // ctrl+v
    "search.action.collapseSearchResults",            // alt+backspace
    "workbench.action.togglePanel",                   // ctrl+j
    "workbench.files.action.collapseExplorerFolders", // alt+backspace
  ],
  "terminal.integrated.copyOnSelection": true,
  "terminal.integrated.macOptionIsMeta": true,
  "terminal.integrated.persistentSessionScrollback": 10000,
  "terminal.integrated.scrollback": 10000,

  "terminal.integrated.defaultProfile.linux": "bash",
  "terminal.integrated.profiles.linux": {
    "bash": {
      "path": "bash",
      "icon": "terminal-bash",
      "args": ["-l"]
    },
    "zsh": {
      "path": "zsh"
    },
    "fish": {
      "path": "fish"
    },
    "tmux": {
      "path": "tmux",
      "icon": "terminal-tmux"
    },
    "pwsh": {
      "path": "pwsh",
      "icon": "terminal-powershell"
    }
  },

  "terminal.integrated.tabs.enabled": false,

  "[terraform]": {
    "editor.formatOnSave": true
  },

  "terraform-ls.experimentalFeatures": {
    "prefillRequiredFields": true
  },

  // Configure glob patterns of file paths to exclude from linting
  "tslint.exclude": "**/{lib,out,dist}/**",

  // Control whether tslint is enabled for JavaScript files or not.
  "tslint.jsEnable": true,

  // Check if a global install TypeScript compiler (e.g. tsc) differs from the used TypeScript language service.
  "typescript.check.tscVersion": false,

  // TypeScript
  "typescript.inlayHints.enumMemberValues.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.parameterNames.enabled": "all",
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.variableTypes.enabled": true,

  // Get rid of that annoying message that shows up everytime you make a new file
  "vim.disableAnnoyingNeovimMessage": true,

  "vscode-neovim.neovimExecutablePaths.linux": "/usr/bin/nvim",
  "vscode-neovim.neovimExecutablePaths.win32": "C:\\tools\\neovim\\Neovim\\bin\\nvim.exe",
  "vscode-neovim.useWSL": false,


  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.pinnedTabSizing": "compact",
  "workbench.editor.scrollToSwitchTabs": true,
  "workbench.editor.showTabs": false,
  "workbench.editor.tabCloseButton": "off",
  "workbench.editor.untitled.hint": "hidden",
  "workbench.editor.wrapTabs": true,

  "workbench.layoutControl.enabled": true,
  "workbench.layoutControl.type": "both",

  "workbench.sideBar.location": "right",

  "workbench.experimental.editor.dragAndDropIntoEditor.enabled": true,

  "[powershell]": {
    "editor.wordSeparators": "`~!@#%^&*()=+[{]}\\|;:'\",.<>/?",
  },
}
// vim:ft=javascript
