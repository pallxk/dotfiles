// Place your key bindings in this file to override the defaults
[
    //
    // Copilot
    //
    {
        "key": "cmd+l",
        "command": "workbench.action.openChat",
        "when": "!composerIsEnabled"
    },
    //
    // Cursor
    //
    {
        "key": "cmd+i",
        "command": "aipopup.action.modal.generate",
        "when": "composerIsEnabled && editorFocus && !composerBarIsVisible"
    },
    {
        "key": "cmd+i",
        "command": "cursorai.action.generateInTerminal",
        "when": "composerIsEnabled && terminalFocus && terminalHasBeenCreated || composerIsEnabled && terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+i",
        "command": "-composer.startComposerPrompt",
        "when": "composerIsEnabled"
    },
    {
        "key": "ctrl+cmd+i",
        "command": "workbench.panel.aichat",
        "when": "composerIsEnabled"
    },
    {
        "key": "shift+cmd+i",
        "command": "composer.startComposerPrompt",
        "when": "composerIsEnabled"
    },
    {
        "key": "cmd+l",
        "command": "composer.openChatAsEditor",
        "when": "composerIsEnabled"
    },
    {
        "key": "cmd+l",
        "command": "-aichat.newchataction"
    },
    //
    // Windsurf
    //
    {
        "key": "ctrl+cmd+i",
        "command": "windsurf.prioritized.chat.open",
        "when": "windsurf.isLoggedIn && !terminalFocus && activePanel != 'workbench.panel.markers'"
    },
    {
        "key": "ctrl+cmd+i",
        "command": "windsurf.prioritized.chat.openFromTerminal",
        "when": "windsurf.isLoggedIn && terminalFocus"
    },
    {
        "key": "ctrl+cmd+i",
        "command": "windsurf.prioritized.chat.openFromProblemsPanel",
        "when": "windsurf.isLoggedIn && activePanel == 'workbench.panel.markers'"
    },
    {
        "key": "cmd+l",
        "command": "windsurf.executeCascadeAction",
        "when": "windsurf.isLoggedIn"
    },
    //
    // Developer
    //
    {
        "key": "shift+alt+cmd+1",
        "command": "workbench.action.openLogsFolder",
        "when": "isMac"
    },
    {
        "key": "shift+alt+cmd+2",
        "command": "workbench.action.openExtensionLogsFolder",
        "when": "isMac"
    },
    //
    // Settings
    //
    {
        "key": "cmd+k shift+cmd+,",
        "command": "workbench.action.openSettingsJson",
        "when": "isMac"
    },
    {
        "key": "ctrl+k shift+ctrl+,",
        "command": "workbench.action.openSettingsJson",
        "when": "!isMac"
    },
    {
        "key": "cmd+k shift+cmd+d",
        "command": "workbench.action.debug.configure"
    },
    {
        "key": "cmd+k shift+cmd+s",
        "command": "workbench.action.openGlobalKeybindingsFile",
        "when": "isMac"
    },
    {
        "key": "ctrl+k shift+ctrl+s",
        "command": "workbench.action.openGlobalKeybindingsFile",
        "when": "!isMac"
    },
    //
    // Cursor
    //
    {
        "key": "ctrl+home",
        "command": "cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+home",
        "command": "cursorTopSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+end",
        "command": "cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+end",
        "command": "cursorBottomSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+cmd+u",
        "command": "cursorRedo",
        "when": "isMac"
    },
    {
        "key": "ctrl+alt+u",
        "command": "cursorRedo",
        "when": "!isMac"
    },
    {
        "key": "ctrl+a",
        "command": "cursorHome",
        "when": "isMac && textInputFocus"
    },
    {
        "key": "ctrl+shift+p",
        "command": "cursorUpSelect",
        "when": "isMac && textInputFocus"
    },
    {
        "key": "ctrl+shift+n",
        "command": "cursorDownSelect",
        "when": "isMac && textInputFocus"
    },
    {
        "key": "ctrl+shift+b",
        "command": "cursorLeftSelect",
        "when": "isMac && textInputFocus"
    },
    {
        "key": "ctrl+shift+f",
        "command": "cursorRightSelect",
        "when": "isMac && textInputFocus"
    },
    {
        "key": "ctrl+u",
        "command": "deleteAllLeft",
        "when": "isMac && textInputFocus && !editorReadonly"
    },
    //
    // Compare
    //
    {
        "key": "alt+cmd+k",
        "command": "compareSelected",
        "when": "isMac && !inKeybindings"
    },
    {
        "key": "ctrl+alt+k",
        "command": "compareSelected",
        "when": "!isMac"
    },
    {
        "key": "alt+t",
        "command": "workbench.action.compareEditor.swapSides",
        "when": "isMac && activeEditor == 'workbench.editors.textDiffEditor'"
    },
    {
        "key": "alt+t",
        "command": "workbench.action.moveActiveEditorGroupRight",
        "when": "isMac && activeEditor != 'workbench.editors.textDiffEditor' && !activeEditorGroupLast"
    },
    {
        "key": "alt+t",
        "command": "workbench.action.moveActiveEditorGroupLeft",
        "when": "isMac && activeEditor != 'workbench.editors.textDiffEditor' && activeEditorGroupLast"
    },
    //
    // Layout Visibility
    //
    {
        "key": "ctrl+k ctrl+shift+.",
        "command": "workbench.action.toggleActivityBarVisibility",
        "when": "!isMac && !terminalFocus"
    },
    {
        "key": "cmd+k shift+cmd+.",
        "command": "workbench.action.toggleActivityBarVisibility",
        "when": "isMac"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "!isMac && !terminalFocus"
    },
    {
        "key": "ctrl+shift+b",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "!isMac && !taskCommandsRegistered || !isMac && terminalFocus"
    },
    {
        "key": "shift+alt+cmd+j",
        "command": "workbench.action.toggleStatusbarVisibility",
        "when": "isMac"
    },
    //
    // List
    //
    {
        "key": "alt+f",
        "command": "list.toggleFindMode",
        "when": "listFocus && listSupportsFind"
    },
    //
    // View
    //
    {
        "key": "shift+ctrl+alt+o",
        "command": "outline.focus",
        "when": "!isMac && focusedView != 'outline'"
    },
    {
        "key": "shift+ctrl+alt+o",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!isMac && focusedView == 'outline'"
    },
    {
        "key": "shift+alt+cmd+o",
        "command": "outline.focus",
        "when": "isMac && focusedView != 'outline'"
    },
    {
        "key": "shift+alt+cmd+o",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "isMac && focusedView == 'outline'"
    },
    {
        "key": "ctrl+alt+t",
        "command": "timeline.focus",
        "when": "!isMac && focusedView != 'timeline'"
    },
    {
        "key": "ctrl+alt+t",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!isMac && focusedView == 'timeline'"
    },
    {
        "key": "ctrl+cmd+t",
        "command": "timeline.focus",
        "when": "isMac && focusedView != 'timeline'"
    },
    {
        "key": "ctrl+cmd+t",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "isMac && focusedView == 'timeline'"
    },
    {
        "key": "ctrl+alt+l",
        "command": "gitlens.views.lineHistory.focus",
        "when": "!isMac && focusedView != 'gitlens.views.lineHistory'"
    },
    {
        "key": "ctrl+alt+l",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "!isMac && focusedView == 'gitlens.views.lineHistory'"
    },
    {
        "key": "alt+cmd+l",
        "command": "gitlens.views.lineHistory.focus",
        "when": "isMac && !findWidgetVisible && focusedView != 'gitlens.views.lineHistory'"
    },
    {
        "key": "alt+cmd+l",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "isMac && !findWidgetVisible && focusedView == 'gitlens.views.lineHistory'"
    },
    //
    // (Un)Pin Editor
    //
    {
        "key": "cmd+k cmd+enter",
        "command": "workbench.action.pinEditor",
        "when": "isMac && !activeEditorIsPinned"
    },
    {
        "key": "cmd+k cmd+enter",
        "command": "workbench.action.unpinEditor",
        "when": "isMac && activeEditorIsPinned"
    },
    {
        "key": "ctrl+k ctrl+enter",
        "command": "workbench.action.pinEditor",
        "when": "!isMac && !activeEditorIsPinned"
    },
    {
        "key": "ctrl+k ctrl+enter",
        "command": "workbench.action.unpinEditor",
        "when": "!isMac && activeEditorIsPinned"
    },
    //
    // Move Editor
    //
    {
        "key": "ctrl+cmd+n",
        "command": "workbench.action.moveEditorToNewWindow",
        "when": "isMac"
    },
    //
    // Editor Split
    //
    {
        "key": "ctrl+alt+\\",
        "command": "workbench.action.splitEditorDown",
        "when": "!isMac"
    },
    {
        "key": "alt+cmd+\\",
        "command": "workbench.action.splitEditorDown",
        "when": "isMac"
    },
    //
    // Copy path
    //
    {
        "key": "cmd+k alt+cmd+c",
        "command": "copyFilePath",
        "when": "isMac && editorFocus || isMac && terminalFocus"
    },
    {
        "key": "ctrl+alt+c",
        "command": "copyFilePath",
        "when": "!isMac && !fileMatchOrFolderMatchWithResourceFocus"
    },
    {
        "key": "cmd+k shift+alt+cmd+c",
        "command": "copyRelativeFilePath",
        "when": "isMac && editorFocus || isMac && terminalFocus"
    },
    {
        "key": "ctrl+alt+c",
        "command": "search.action.copyPath",
        "when": "!isMac && fileMatchOrFolderMatchWithResourceFocus"
    },
    {
        "key": "ctrl+shift+alt+c",
        "command": "copyRelativeFilePath",
        "when": "!isMac && !fileMatchOrFolderMatchWithResourceFocus"
    },
    //
    // Paste path
    //
    {
        "key": "cmd+k cmd+v",
        "command": "runCommands",
        "args": {
            "commands": [
                "copyFilePath",
                {"command": "workbench.action.terminal.sendSequence", "args": {"text": "\""}},
                "workbench.action.terminal.paste",
                {"command": "workbench.action.terminal.sendSequence", "args": {"text": "\""}},
                "workbench.action.terminal.focus"
            ]
        },
        "when": "isMac"
    },
    {
        "key": "ctrl+k ctrl+v",
        "command": "runCommands",
        "args": {
            "commands": [
                "copyFilePath",
                {"command": "workbench.action.terminal.sendSequence", "args": {"text": "\""}},
                "workbench.action.terminal.paste",
                {"command": "workbench.action.terminal.sendSequence", "args": {"text": "\""}},
                "workbench.action.terminal.focus"
            ]
        },
        "when": "!isMac"
    },
    //
    // Reveal in OS
    //
    {
        "key": "cmd+k alt+cmd+r",
        "command": "revealFileInOS",
        "when": "resourceScheme == 'file' || resourceScheme == 'vscode-userdata'"
    },
    {
        "key": "cmd+r",
        "command": "revealFileInOS",
        "when": "isMac && explorerViewletFocus"
    },
    {
        "key": "cmd+enter",
        "command": "revealFileInOS",
        "when": "isMac && explorerViewletFocus"
    },
    //
    // Join Lines
    //
    {
        "key": "ctrl+alt+j",
        "command": "editor.action.joinLines",
        "when": "!isMac && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+alt+j",
        "command": "runCommands",
        "args": {
            "commands": [
                "cursorUp",
                "editor.action.joinLines",
            ]
        },
        "when": "!isMac && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+j",
        "command": "runCommands",
        "args": {
            "commands": [
                "cursorUp",
                "editor.action.joinLines",
            ]
        },
        "when": "isMac && editorTextFocus && !editorReadonly"
    },
    // {
    //     "key": "ctrl+j",
    //     "command": "editor.action.joinLines",
    //     "when": "isMac && editorTextFocus && !editorReadonly"
    // },
    //
    // Comment
    //
    {
        "key": "shift+alt+a",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+cmd+/",
        "command": "editor.action.blockComment",
        "when": "isMac && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+/",
        "command": "editor.action.blockComment",
        "when": "!isMac && editorTextFocus && !editorReadonly"
    },
    //
    // Format
    //
    {
        "key": "shift+alt+f",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "shift+alt+f",
        "command": "editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "editor.action.formatChanges",
        "when": "!isMac && !editorHasSelection"
    },
    {
        "key": "cmd+k cmd+f",
        "command": "editor.action.formatChanges",
        "when": "isMac && !editorHasSelection"
    },
    //
    // suggest
    //
    {
        "key": "shift+escape",
        "command": "editor.action.inlineSuggest.hide",
        "when": "inlineSuggestionVisible"
    },
    //
    // selection
    //
    {
        "key": "ctrl+shift+d",
        "command": "editor.action.duplicateSelection",
        "when": "isMac"
    },
    {
        "key": "ctrl+shift+d",
        "command": "editor.action.addSelectionToPreviousFindMatch",
        "when": "!isMac && editorFocus && editorHasSelection"
    },
    {
        "key": "shift+cmd+d",
        "command": "editor.action.addSelectionToPreviousFindMatch",
        "when": "isMac && editorFocus && editorHasSelection"
    },
    {
        "key": "ctrl+k ctrl+shift+d",
        "command": "editor.action.moveSelectionToPreviousFindMatch",
        "when": "!isMac && editorFocus"
    },
    {
        "key": "cmd+k shift+cmd+d",
        "command": "editor.action.moveSelectionToPreviousFindMatch",
        "when": "isMac && editorFocus"
    },
    //
    // Selection
    //
    {
        "key": "ctrl+alt+l",
        "command": "expandLineSelection",
        "when": "!isMac && textInputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+cmd+l",
        "command": "expandLineSelection",
        "when": "isMac && textInputFocus"
    },
    {
        "key": "cmd+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+j",
        "command": "editor.action.smartSelect.expand",
        "when": "!isMac && editorTextFocus"
    },
    {
        "key": "ctrl+cmd+j",
        "command": "editor.action.smartSelect.expand",
        "when": "isMac && editorTextFocus"
    },
    {
        "key": "ctrl+alt+k",
        "command": "editor.action.smartSelect.shrink",
        "when": "!isMac && editorTextFocus"
    },
    {
        "key": "ctrl+cmd+k",
        "command": "editor.action.smartSelect.shrink",
        "when": "isMac && editorTextFocus"
    },
    //
    // indent & outdent
    //
    {
        "key": "cmd+[",
        "command": "-editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+]",
        "command": "-editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+[",
        "command": "editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+]",
        "command": "editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    //
    // References View
    //
    {
        "key": "shift+alt+cmd+r",
        "command": "references-view.findReferences",
        "when": "isMac && editorHasReferenceProvider"
    },
    {
        "key": "shift+ctrl+alt+r",
        "command": "references-view.findReferences",
        "when": "!isMac && editorHasReferenceProvider"
    },
    //
    // workbench navigation
    //
    {
        "key": "ctrl+alt+0",
        "command": "workbench.action.focusAuxiliaryBar",
        "when": "!isMac"
    },
    {
        "key": "alt+cmd+0",
        "command": "workbench.action.focusAuxiliaryBar",
        "when": "isMac"
    },
    {
        "key": "alt+j",
        "command": "workbench.action.focusPanel",
        "when": "!panelFocus"
    },
    {
        "key": "alt+j",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "panelFocus && mainEditorAreaVisible"
    },
    {
        "key": "alt+j",
        "command": "workbench.action.toggleMaximizedPanel",
        "when": "panelFocus && !mainEditorAreaVisible"
    },
    //
    // editor navigation
    //
    // {
    //     "key": "ctrl+tab",
    //     "command": "workbench.action.nextEditor",
    //     "when": "!inQuickOpen"
    // },
    // {
    //     "key": "ctrl+shift+tab",
    //     "command": "workbench.action.previousEditor",
    //     "when": "!inQuickOpen"
    // },
    // for use in integrated terminal on chromeOS
    {
        "key": "cmd+p",
        "command": "workbench.action.quickOpen",
        "when": "!isMac"
    },
    {
        "key": "alt+q",
        "command": "workbench.action.showAllEditorsByMostRecentlyUsed",
        "when": "!inQuickOpen"
    },
    {
        "key": "alt+q",
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inQuickOpen"
    },
    {
        "key": "alt+shift+q",
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inQuickOpen"
    },
    {
        "key": "cmd+[",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "cmd+]",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "ctrl+alt+[",
        "command": "workbench.action.navigateBackInEditLocations"
    },
    {
        "key": "ctrl+alt+]",
        "command": "workbench.action.navigateForwardInEditLocations"
    },
    //
    // Build
    //
    {
        "key": "ctrl+k ctrl+shift+b",
        "command": "workbench.action.tasks.build",
        "when": "!isMac"
    },
    {
        "key": "cmd+k shift+cmd+b",
        "command": "workbench.action.tasks.build",
        "when": "isMac"
    },
    //
    // Debug
    //
    {
        "key": "shift+cmd+j",
        "command": "workbench.debug.action.toggleRepl",
        "when": "isMac && workbench.panel.repl.view.active && !inSearchEditor && !searchViewletFocus"
    },
    // Debug - Continue/Pause
    {
        "key": "ctrl+\\",
        "command": "workbench.action.debug.continue",
        "when": "!isMac && inDebugMode"
    },
    {
        "key": "cmd+\\",
        "command": "workbench.action.debug.continue",
        "when": "isMac && inDebugMode"
    },
    {
        "key": "ctrl+\\",
        "command": "workbench.action.debug.pause",
        "when": "!isMac && debugState == 'running'"
    },
    {
        "key": "cmd+\\",
        "command": "workbench.action.debug.pause",
        "when": "isMac && debugState == 'running'"
    },
    // Debug - Stop on Entry
    {
        "key": "ctrl+'",
        "command": "extension.node-debug.startWithStopOnEntry",
        "when": "!isMac && !inDebugMode"
    },
    {
        "key": "cmd+'",
        "command": "extension.node-debug.startWithStopOnEntry",
        "when": "isMac && !inDebugMode"
    },
    // Debug - Step Over
    {
        "key": "ctrl+'",
        "command": "workbench.action.debug.stepOver",
        "when": "!isMac && debugState == 'stopped'"
    },
    {
        "key": "cmd+'",
        "command": "workbench.action.debug.stepOver",
        "when": "isMac && debugState == 'stopped'"
    },
    // Debug - Run to Cursor
    {
        "key": "ctrl+f10",
        "command": "editor.debug.action.runToCursor",
        "when": "inDebugMode"
    },
    {
        "key": "cmd+shift+'",
        "command": "editor.debug.action.runToCursor",
        "when": "isMac && inDebugMode"
    },
    {
        "key": "ctrl+shift+'",
        "command": "editor.debug.action.runToCursor",
        "when": "!isMac && inDebugMode"
    },
    // Debug - Step into
    {
        "key": "ctrl+;",
        "command": "workbench.action.debug.stepInto",
        "when": "!isMac && debugState != 'inactive'"
    },
    {
        "key": "cmd+;",
        "command": "workbench.action.debug.stepInto",
        "when": "isMac && debugState != 'inactive'"
    },
    // Debug - Step out
    {
        "key": "ctrl+shift+;",
        "command": "workbench.action.debug.stepOut",
        "when": "!isMac && debugState == 'stopped'"
    },
    {
        "key": "shift+cmd+;",
        "command": "workbench.action.debug.stepOut",
        "when": "isMac && debugState == 'stopped'"
    },
    // Debug - Call Stack
    {
        "key": "ctrl+shift+,",
        "command": "workbench.action.debug.callStackTop",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+,",
        "command": "workbench.action.debug.callStackUp",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+.",
        "command": "workbench.action.debug.callStackDown",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+shift+.",
        "command": "workbench.action.debug.callStackBottom",
        "when": "inDebugMode"
    },
    // Debug - Selection to REPL
    {
        "key": "ctrl+shift+e",
        "command": "editor.debug.action.selectionToRepl",
        "when": "!isMac && inDebugMode && editorHasSelection"
    },
    {
        "key": "shift+cmd+e",
        "command": "editor.debug.action.selectionToRepl",
        "when": "isMac && inDebugMode && editorHasSelection"
    },
    // Debug - Toggle Breakpoints Activation
    {
        "key": "cmd+f8",    // As used in Chrome
        "command": "workbench.debug.viewlet.action.toggleBreakpointsActivatedAction",
        "when": "isMac"
    },
    {
        "key": "cmd+k cmd+y",
        "command": "workbench.debug.viewlet.action.toggleBreakpointsActivatedAction",
        "when": "isMac"
    },
    {
        "key": "cmd+y",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "isMac && debuggersAvailable && editorTextFocus"
    },
    {
        "key": "alt+cmd+y",
        "command": "editor.debug.action.conditionalBreakpoint",
        "when": "isMac && debuggersAvailable && editorTextFocus"
    },
    {
        "key": "ctrl+cmd+y",
        "command": "editor.debug.action.toggleInlineBreakpoint",
        "when": "editorTextFocus"
    },
    //
    // editor
    //
    {
        "key": "ctrl+alt+pageup",
        "command": "scrollLineUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+pagedown",
        "command": "scrollLineDown",
        "when": "textInputFocus"
    },
    //
    // editor - macOS
    //
    {
        "key": "cmd+1",
        "command": "workbench.action.openEditorAtIndex1"
    },
    {
        "key": "cmd+2",
        "command": "workbench.action.openEditorAtIndex2"
    },
    {
        "key": "cmd+3",
        "command": "workbench.action.openEditorAtIndex3"
    },
    {
        "key": "cmd+4",
        "command": "workbench.action.openEditorAtIndex4"
    },
    {
        "key": "cmd+5",
        "command": "workbench.action.openEditorAtIndex5"
    },
    {
        "key": "cmd+6",
        "command": "workbench.action.openEditorAtIndex6"
    },
    {
        "key": "cmd+7",
        "command": "workbench.action.openEditorAtIndex7"
    },
    {
        "key": "cmd+8",
        "command": "workbench.action.openEditorAtIndex8"
    },
    {
        "key": "cmd+9",
        "command": "workbench.action.lastEditorInGroup"
    },
    //
    // editor group - macOS
    //
    {
        "key": "cmd+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "cmd+2",
        "command": "-workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "cmd+3",
        "command": "-workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "cmd+4",
        "command": "-workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "cmd+5",
        "command": "-workbench.action.focusFifthEditorGroup"
    },
    {
        "key": "cmd+6",
        "command": "-workbench.action.focusSixthEditorGroup"
    },
    {
        "key": "cmd+7",
        "command": "-workbench.action.focusSeventhEditorGroup"
    },
    {
        "key": "cmd+8",
        "command": "-workbench.action.focusEighthEditorGroup"
    },
    {
        "key": "ctrl+1",
        "command": "workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+2",
        "command": "workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "ctrl+3",
        "command": "workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "ctrl+4",
        "command": "workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "ctrl+5",
        "command": "workbench.action.focusFifthEditorGroup"
    },
    {
        "key": "ctrl+6",
        "command": "workbench.action.focusSixthEditorGroup"
    },
    {
        "key": "ctrl+7",
        "command": "workbench.action.focusSeventhEditorGroup"
    },
    {
        "key": "ctrl+8",
        "command": "workbench.action.focusEighthEditorGroup"
    },
    //
    // editor - windows
    //
    {
        "key": "shift+alt+w",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "shift+alt+l",
        "command": "workbench.action.closeEditorsToTheLeft"
    },
    {
        "key": "shift+alt+r",
        "command": "workbench.action.closeEditorsToTheRight"
    },
    {
        "key": "alt+1",
        "command": "-workbench.action.openEditorAtIndex1"
    },
    {
        "key": "alt+2",
        "command": "-workbench.action.openEditorAtIndex2"
    },
    {
        "key": "alt+3",
        "command": "-workbench.action.openEditorAtIndex3"
    },
    {
        "key": "alt+4",
        "command": "-workbench.action.openEditorAtIndex4"
    },
    {
        "key": "alt+5",
        "command": "-workbench.action.openEditorAtIndex5"
    },
    {
        "key": "alt+6",
        "command": "-workbench.action.openEditorAtIndex6"
    },
    {
        "key": "alt+7",
        "command": "-workbench.action.openEditorAtIndex7"
    },
    {
        "key": "alt+8",
        "command": "-workbench.action.openEditorAtIndex8"
    },
    {
        "key": "alt+9",
        "command": "-workbench.action.openEditorAtIndex9"
    },
    {
        "key": "alt+0",
        "command": "-workbench.action.lastEditorInGroup"
    },
    {
        "key": "ctrl+1",
        "command": "workbench.action.openEditorAtIndex1",
        "when": "!isMac"
    },
    {
        "key": "ctrl+2",
        "command": "workbench.action.openEditorAtIndex2",
        "when": "!isMac"
    },
    {
        "key": "ctrl+3",
        "command": "workbench.action.openEditorAtIndex3",
        "when": "!isMac"
    },
    {
        "key": "ctrl+4",
        "command": "workbench.action.openEditorAtIndex4",
        "when": "!isMac"
    },
    {
        "key": "ctrl+5",
        "command": "workbench.action.openEditorAtIndex5",
        "when": "!isMac"
    },
    {
        "key": "ctrl+6",
        "command": "workbench.action.openEditorAtIndex6",
        "when": "!isMac"
    },
    {
        "key": "ctrl+7",
        "command": "workbench.action.openEditorAtIndex7",
        "when": "!isMac"
    },
    {
        "key": "ctrl+8",
        "command": "workbench.action.openEditorAtIndex8",
        "when": "!isMac"
    },
    {
        "key": "ctrl+9",
        "command": "workbench.action.lastEditorInGroup",
        "when": "!isMac"
    },
    //
    // editor group - Windows/Linux/chromeOS
    //
    {
        "key": "ctrl+shift+1",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "!isMac && !terminalFocus"
    },
    {
        "key": "ctrl+shift+2",
        "command": "workbench.action.focusSecondEditorGroup",
        "when": "!isMac && !terminalFocus"
    },
    {
        "key": "ctrl+shift+3",
        "command": "workbench.action.focusThirdEditorGroup",
        "when": "!isMac && !terminalFocus"
    },
    {
        "key": "ctrl+shift+4",
        "command": "workbench.action.focusFourthEditorGroup",
        "when": "!isMac && !terminalFocus"
    },
    {
        "key": "ctrl+shift+5",
        "command": "workbench.action.focusFifthEditorGroup",
        "when": "!isMac && !terminalFocus"
    },
    {
        "key": "ctrl+shift+6",
        "command": "workbench.action.focusSixthEditorGroup",
        "when": "!isMac && !terminalFocus"
    },
    {
        "key": "ctrl+shift+7",
        "command": "workbench.action.focusSeventhEditorGroup",
        "when": "!isMac && !terminalFocus"
    },
    {
        "key": "ctrl+shift+8",
        "command": "workbench.action.focusEighthEditorGroup",
        "when": "!isMac && !terminalFocus"
    },
    //
    // Remote
    //
    {
        "key": "ctrl+shift+r",
        "command": "workbench.view.remote",
        "when": "!isMac && !inRecentFilesPicker && !inSearchEditor && !terminalFindFocused && !vscodeKubernetesDescribeContext"
    },
    {
        "key": "shift+cmd+r",
        "command": "workbench.view.remote",
        "when": "isMac && !inSearchEditor && !vscodeKubernetesDescribeContext"
    },
    {
        "key": "cmd+k shift+cmd+r",
        "command": "workbench.action.remote.showMenu",
        "when": "isMac"
    },
    {
        "key": "ctrl+k ctrl+shift+r",
        "command": "workbench.action.remote.showMenu",
        "when": "!isMac"
    },
    {
        "key": "alt+cmd+o",
        "command": "-workbench.action.remote.showMenu"
    },
    {
        "key": "ctrl+k ctrl+shift+p",
        "command": "~remote.forwardedPortsContainer",
        "when": "!isMac"
    },
    {
        "key": "cmd+k shift+cmd+p",
        "command": "~remote.forwardedPortsContainer",
        "when": "isMac"
    },
    //
    // Explorer
    //
    {
        "key": "cmd+o",
        "command": "explorer.openAndPassFocus",
        "when": "isMac && filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "alt+;",
        "command": "revealInExplorer"
    },
    {
        "key": "alt+shift+;",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.view.explorer",
                "workbench.files.action.collapseExplorerFolders"
            ]
        }
    },
    {
        "key": "shift+alt+f",
        "command": "filesExplorer.findInFolder",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "alt+f2",
        "command": "explorer.download",
        "when": "!isMac"
    },
    {
        "key": "ctrl+alt+s",
        "command": "explorer.download",
        "when": "!isMac"
    },
    {
        "key": "cmd+alt+s",
        "command": "explorer.download",
        "when": "isMac"
    },
    // {
    //     "key": "ctrl+alt+u",
    //     "command": "explorer.upload",
    //     "when": "!isMac && explorerResourceIsFolder"
    // },
    // {
    //     "key": "cmd+alt+u",
    //     "command": "explorer.upload",
    //     "when": "isMac && explorerResourceIsFolder"
    // },
    {
        "key": "ctrl+e",
        "command": "explorer.newFolder",
        "when": "!isMac && focusedView == 'workbench.explorer.fileView'"
    },
    {
        "key": "cmd+e",
        "command": "explorer.newFolder",
        "when": "isMac && focusedView == 'workbench.explorer.fileView'"
    },
    {
        "key": "ctrl+n",
        "command": "explorer.newFile",
        "when": "!isMac && focusedView == 'workbench.explorer.fileView'"
    },
    {
        "key": "cmd+n",
        "command": "explorer.newFile",
        "when": "isMac && focusedView == 'workbench.explorer.fileView'"
    },
    //
    // Search
    //
    {
        "key": "shift+alt+cmd+f",
        "command": "search.action.openEditor",
        "when": "isMac"
    },
    {
        "key": "ctrl+e",
        "command": "actions.findWithSelection",
        "when": "!isMac && editorFocus"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "alt+shift+enter",
        "command": "search.focus.previousInputBox",
        "when": "searchViewletVisible"
    },
    {
        "key": "alt+enter",
        "command": "search.focus.previousInputBox",
        "when": "searchViewletVisible && !inputBoxFocus"
    },
    {
        "key": "alt+enter",
        "command": "search.focus.nextInputBox",
        "when": "searchViewletVisible && inputBoxFocus"
    },
    {
        "key": "alt+'",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.view.search",
                "search.action.expandSearchResults"
            ]
        }
    },
    {
        "key": "alt+shift+'",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.view.search",
                "search.action.collapseSearchResults"
            ]
        }
    },
    {
        "key": "alt+v",
        "command": "search.action.viewAsTree",
        "when": "focusedView == 'workbench.view.search' && !inTreeView"
    },
    {
        "key": "alt+v",
        "command": "search.action.viewAsList",
        "when": "focusedView == 'workbench.view.search' && inTreeView"
    },
    //
    // Terminal
    //
    {
        "key": "cmd+w",
        "command": "workbench.action.terminal.kill",
        "when": "isMac && focusedView == 'terminal'"
    },
    {
        "key": "cmd+d",
        "command": "workbench.action.terminal.split",
        "when": "isMac && terminalFocus && terminalProcessSupported || isMac && terminalFocus && terminalWebExtensionContributedProfile"
    },
    {
        "key": "cmd+[",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "isMac && terminalFocus && terminalHasBeenCreated || isMac && terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+]",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "isMac && terminalFocus && terminalHasBeenCreated || isMac && terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+k cmd+k",
        "command": "workbench.action.terminal.clear",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
    },
    {
        "key": "cmd+shift+k",
        "command": "workbench.action.terminal.clear",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
    },
    //
    // Terminal Move
    //
    {
        "key": "ctrl+cmd+`",
        "command": "workbench.action.terminal.moveToEditor",
        "when": "isMac && focusedView == 'terminal'"
    },
    {
        "key": "ctrl+cmd+`",
        "command": "workbench.action.terminal.moveToTerminalPanel",
        "when": "isMac && focusedView != 'terminal'"
    },
    //
    // Terminal Resize
    //
    {
        "key": "ctrl+cmd+left",
        "command": "workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus && !terminalEditorActive && terminalHasBeenCreated || terminalFocus && !terminalEditorActive && terminalProcessSupported"
    },
    {
        "key": "ctrl+cmd+left",
        "command": "-workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+cmd+right",
        "command": "workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus && !terminalEditorActive && terminalHasBeenCreated || terminalFocus && !terminalEditorActive && terminalProcessSupported"
    },
    {
        "key": "ctrl+cmd+right",
        "command": "-workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    //
    // Terminal Search
    //
    {
        "key": "f3",
        "command": "workbench.action.terminal.findNext",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
    },
    {
        "key": "f3",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    //
    // neovim
    //
    {
        "key": "j",
        "command": "vscode-neovim.compositeEscape1",
        "when": "neovim.mode == insert",
        "args": "j"
    },
    {
        "key": "k",
        "command": "vscode-neovim.compositeEscape2",
        "when": "neovim.mode == insert",
        "args": "k"
    },
    {
        "key": "ctrl+b",
        "command": "-vscode-neovim.ctrl-b",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+c",
        "command": "-vscode-neovim.escape",
        "when": "editorTextFocus && neovim.init"
    },
    {
        "key": "ctrl+f",
        "command": "-vscode-neovim.ctrl-f",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+k",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+w",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-cgroovy.organizeDependences"
    },
    {
        "key": "shift+cmd+d",
        "command": "-cgroovy.organizeDependences"
    },
    {
        "key": "ctrl+shift+o",
        "command": "-cgroovy.organizeImports"
    },
    {
        "key": "shift+cmd+o",
        "command": "-cgroovy.organizeImports"
    },
    {
        "key": "ctrl+r shift+x",
        "command": "-npm-script.terminate-script",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+r l",
        "command": "-npm-script.showOutput",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+r t",
        "command": "-npm-script.test",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+r shift+r",
        "command": "-npm-script.run",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+r r",
        "command": "-npm-script.rerun-last-script",
        "when": "!terminalFocus"
    },
    // Disable quick open view in terminal;
    // Enable quick open view on Linux/ChromeOS.
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quickOpenView"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.quickOpenView",
        "when": "!terminalFocus && !inViewsPicker"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.quickOpenNavigateNextInViewPicker",
        "when": "!terminalFocus && inViewsPicker"
    },
    {
        "key": "ctrl+shift+q",
        "command": "workbench.action.quickOpenNavigatePreviousInViewPicker",
        "when": "!terminalFocus && inViewsPicker"
    },
    // {
    //     "key": "ctrl+alt+0",
    //     "command": "vaulty.decrypt"
    // },
    //
    // terminal
    //
    {
        "key": "f1",
        "command": "workbench.action.showCommands",
        "when": "!terminalFocus"
    },
    {
        "key": "f1",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.terminal.goToRecentDirectory",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+g",
        "command": "workbench.action.terminal.goToRecentDirectory",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    //
    // terminal navigation
    //
    {
        "key": "shift+home",
        "command": "workbench.action.terminal.scrollToTop",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "shift+end",
        "command": "workbench.action.terminal.scrollToBottom",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "ctrl+up",
        "command": "workbench.action.terminal.scrollUp",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "ctrl+down",
        "command": "workbench.action.terminal.scrollDown",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "ctrl+shift+pageup",
        "command": "workbench.action.terminal.scrollToPreviousCommand",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+pagedown",
        "command": "workbench.action.terminal.scrollToNextCommand",
        "when": "terminalFocus"
    },
    {
        "key": "alt+`",
        "command": "openInTerminal",
        "when": "!isMac"
    },
    {
        "key": "ctrl+alt+`",
        "command": "openInTerminal",
        "when": "isMac"
    },
    //
    // terminal - macOS
    //
    {
        "key": "cmd+k",
        "command": "-workbench.action.terminal.clear",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+alt+1",
        "command": "workbench.action.terminal.focusAtIndex1",
        "when": "isMac && terminalCount > 1"
    },
    {
        "key": "cmd+alt+2",
        "command": "workbench.action.terminal.focusAtIndex2",
        "when": "isMac && terminalCount > 2"
    },
    {
        "key": "cmd+alt+3",
        "command": "workbench.action.terminal.focusAtIndex3",
        "when": "isMac && terminalCount > 3"
    },
    {
        "key": "cmd+alt+4",
        "command": "workbench.action.terminal.focusAtIndex4",
        "when": "isMac && terminalCount > 4"
    },
    {
        "key": "cmd+alt+5",
        "command": "workbench.action.terminal.focusAtIndex5",
        "when": "isMac && terminalCount > 5"
    },
    {
        "key": "cmd+alt+6",
        "command": "workbench.action.terminal.focusAtIndex6",
        "when": "isMac && terminalCount > 6"
    },
    {
        "key": "cmd+alt+7",
        "command": "workbench.action.terminal.focusAtIndex7",
        "when": "isMac && terminalCount > 7"
    },
    {
        "key": "cmd+alt+8",
        "command": "workbench.action.terminal.focusAtIndex8",
        "when": "isMac && terminalCount > 8"
    },
    {
        "key": "cmd+alt+9",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.terminal.focusAtIndex1",
                "workbench.action.terminal.focusPrevious",
            ]
        },
    },
    {
        "key": "cmd+shift+`",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${workspaceFolder}"
        },
        "when": "isMac"
    },
    {
        "key": "cmd+alt+`",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${fileDirname}"
        },
        "when": "isMac"
    },
    {
        "key": "cmd+alt+1",
        "command": "workbench.action.terminal.new",
        "when": "isMac && !workspaceFolder && terminalCount < 1"
    },
    {
        "key": "cmd+alt+2",
        "command": "workbench.action.terminal.new",
        "when": "isMac && !workspaceFolder && terminalCount < 2"
    },
    {
        "key": "cmd+alt+3",
        "command": "workbench.action.terminal.new",
        "when": "isMac && !workspaceFolder && terminalCount < 3"
    },
    {
        "key": "cmd+alt+4",
        "command": "workbench.action.terminal.new",
        "when": "isMac && !workspaceFolder && terminalCount < 4"
    },
    {
        "key": "cmd+alt+5",
        "command": "workbench.action.terminal.new",
        "when": "isMac && !workspaceFolder && terminalCount < 5"
    },
    {
        "key": "cmd+alt+6",
        "command": "workbench.action.terminal.new",
        "when": "isMac && !workspaceFolder && terminalCount < 6"
    },
    {
        "key": "cmd+alt+7",
        "command": "workbench.action.terminal.new",
        "when": "isMac && !workspaceFolder && terminalCount < 7"
    },
    {
        "key": "cmd+alt+8",
        "command": "workbench.action.terminal.new",
        "when": "isMac && !workspaceFolder && terminalCount < 8"
    },
    {
        "key": "cmd+alt+9",
        "command": "workbench.action.terminal.new",
        "when": "isMac && !workspaceFolder && terminalCount < 9"
    },
    {
        "key": "cmd+alt+1",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${workspaceFolder}"
        },
        "when": "isMac && workspaceFolder && terminalCount < 1"
    },
    {
        "key": "cmd+alt+2",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${workspaceFolder}"
        },
        "when": "isMac && workspaceFolder && terminalCount < 2"
    },
    {
        "key": "cmd+alt+3",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${workspaceFolder}"
        },
        "when": "isMac && workspaceFolder && terminalCount < 3"
    },
    {
        "key": "cmd+alt+4",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${workspaceFolder}"
        },
        "when": "isMac && workspaceFolder && terminalCount < 4"
    },
    {
        "key": "cmd+alt+5",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${workspaceFolder}"
        },
        "when": "isMac && workspaceFolder && terminalCount < 5"
    },
    {
        "key": "cmd+alt+6",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${workspaceFolder}"
        },
        "when": "isMac && workspaceFolder && terminalCount < 6"
    },
    {
        "key": "cmd+alt+7",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${workspaceFolder}"
        },
        "when": "isMac && workspaceFolder && terminalCount < 7"
    },
    {
        "key": "cmd+alt+8",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${workspaceFolder}"
        },
        "when": "isMac && workspaceFolder && terminalCount < 8"
    },
    {
        "key": "cmd+alt+9",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${workspaceFolder}"
        },
        "when": "isMac && workspaceFolder && terminalCount < 9"
    },
    //
    // terminal - windows
    //
    {
        "key": "ctrl+k ctrl+k",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u000b"
        }, // ctrl-k
        "when": "terminalFocus && !isMac"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u000b"
        }, // ctrl-k
        "when": "terminalFocus && !isMac"
    },
    {
        "key": "ctrl+shift+/",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u007f"
        }, // ctrl-shift+/
        "when": "terminalFocus && !isMac"
    },
    {
        "key": "ctrl+shift+r",
        "command": "workbench.action.terminal.focusFind",
        "when": "!isMac && terminalFocus && !terminalFindFocused"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.terminal.findPrevious",
        "when": "!isMac && terminalFindFocused"
    },
    {
        "key": "ctrl+s",
        "command": "workbench.action.terminal.findNext",
        "when": "!isMac && terminalFindFocused"
    },
    {
        "key": "ctrl+alt+1",
        "command": "workbench.action.terminal.focusAtIndex1",
        "when": "!isMac && terminalCount > 1"
    },
    {
        "key": "ctrl+alt+2",
        "command": "workbench.action.terminal.focusAtIndex2",
        "when": "!isMac && terminalCount > 2"
    },
    {
        "key": "ctrl+alt+3",
        "command": "workbench.action.terminal.focusAtIndex3",
        "when": "!isMac && terminalCount > 3"
    },
    {
        "key": "ctrl+alt+4",
        "command": "workbench.action.terminal.focusAtIndex4",
        "when": "!isMac && terminalCount > 4"
    },
    {
        "key": "ctrl+alt+5",
        "command": "workbench.action.terminal.focusAtIndex5",
        "when": "!isMac && terminalCount > 5"
    },
    {
        "key": "ctrl+alt+6",
        "command": "workbench.action.terminal.focusAtIndex6",
        "when": "!isMac && terminalCount > 6"
    },
    {
        "key": "ctrl+alt+7",
        "command": "workbench.action.terminal.focusAtIndex7",
        "when": "!isMac && terminalCount > 7"
    },
    {
        "key": "ctrl+alt+8",
        "command": "workbench.action.terminal.focusAtIndex8",
        "when": "!isMac && terminalCount > 8"
    },
    {
        "key": "ctrl+alt+9",
        "command": "workbench.action.terminal.focusAtIndex1",
        "when": "!isMac && terminalCount < 1"
    },
    {
        "key": "ctrl+alt+9",
        "command": "workbench.action.terminal.focusAtIndex2",
        "when": "!isMac && terminalCount < 2"
    },
    {
        "key": "ctrl+alt+9",
        "command": "workbench.action.terminal.focusAtIndex3",
        "when": "!isMac && terminalCount < 3"
    },
    {
        "key": "ctrl+alt+9",
        "command": "workbench.action.terminal.focusAtIndex4",
        "when": "!isMac && terminalCount < 4"
    },
    {
        "key": "ctrl+alt+9",
        "command": "workbench.action.terminal.focusAtIndex5",
        "when": "!isMac && terminalCount < 5"
    },
    {
        "key": "ctrl+alt+9",
        "command": "workbench.action.terminal.focusAtIndex6",
        "when": "!isMac && terminalCount < 6"
    },
    {
        "key": "ctrl+alt+9",
        "command": "workbench.action.terminal.focusAtIndex7",
        "when": "!isMac && terminalCount < 7"
    },
    {
        "key": "ctrl+alt+9",
        "command": "workbench.action.terminal.focusAtIndex8",
        "when": "!isMac && terminalCount > 8"
    },
    {
        "key": "ctrl+alt+9",
        "command": "workbench.action.terminal.focusAtIndex9",
        "when": "!isMac && terminalCount > 9"
    },
    {
        "key": "ctrl+shift+`",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${workspaceFolder}"
        },
        "when": "!isMac"
    },
    {
        "key": "ctrl+alt+`",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${fileDirname}"
        },
        "when": "!isMac"
    },
    {
        "key": "ctrl+alt+1",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${workspaceFolder}"
        },
        "when": "!isMac && terminalCount < 0"
    },
    {
        "key": "ctrl+alt+2",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${workspaceFolder}"
        },
        "when": "!isMac && terminalCount < 1"
    },
    {
        "key": "ctrl+alt+3",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${workspaceFolder}"
        },
        "when": "!isMac && terminalCount < 2"
    },
    {
        "key": "ctrl+alt+4",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${workspaceFolder}"
        },
        "when": "!isMac && terminalCount < 3"
    },
    {
        "key": "ctrl+alt+5",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${workspaceFolder}"
        },
        "when": "!isMac && terminalCount < 4"
    },
    {
        "key": "ctrl+alt+6",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${workspaceFolder}"
        },
        "when": "!isMac && terminalCount < 5"
    },
    {
        "key": "ctrl+alt+7",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${workspaceFolder}"
        },
        "when": "!isMac && terminalCount < 6"
    },
    {
        "key": "ctrl+alt+8",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${workspaceFolder}"
        },
        "when": "!isMac && terminalCount < 7"
    },
    {
        "key": "ctrl+alt+9",
        "command": "workbench.action.terminal.newWithCwd",
        "args": {
            "cwd": "${workspaceFolder}"
        },
        "when": "!isMac && terminalCount < 8"
    },
    {
        "key": "ctrl+,",
        "command": "workbench.action.openRemoteSettings",
        "when": "remote.sshContext && !isMac"
    },
    {
        "key": "cmd+,",
        "command": "workbench.action.openRemoteSettings",
        "when": "remote.sshContext && isMac"
    },
    //
    // Open
    //
    {
        "key": "ctrl+k ctrl+shift+o",
        "command": "workbench.action.openWorkspace",
        "when": "!isMac"
    },
    {
        "key": "cmd+k shift+cmd+o",
        "command": "workbench.action.openWorkspace",
        "when": "isMac"
    },
    {
        "key": "cmd+k cmd+o",
        "command": "workbench.action.files.openFileFolder",
        "when": "isMacNative && openFolderWorkspaceSupport"
    },
    {
        "key": "cmd+k cmd+p",
        "command": "workbench.action.showAllEditors",
        "when": "isMac"
    },
    //
    // DevTools
    //
    {
        "key": "alt+cmd+i",
        "command": "workbench.action.toggleDevTools",
        "when": "isMac && !isWeb"
    },
    {
        "key": "ctrl+shift+i",
        "command": "workbench.action.toggleDevTools",
        "when": "!isMac && !isWeb"
    },
    //
    // GitHub Copilot
    //
    {
        "key": "ctrl+enter",
        "command": "-github.copilot.generate",
        "when": "!isMac && editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
    },
    {
        "key": "ctrl+k ctrl+enter",
        "command": "github.copilot.generate",
        "when": "!isMac && editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
    },
    //
    // Git Graph
    //
    {
        "key": "ctrl+shift+g",
        "command": "workbench.scm.history.focus"
    },
    {
        "key": "ctrl+cmd+g",
        "command": "git-graph.view",
        "when": "isMac"
    },
    {
        "key": "ctrl+alt+g",
        "command": "git-graph.view",
        "when": "!isMac"
    },
    //
    // GitLens
    //
    {
        "key": "shift+alt+cmd+l",
        "command": "gitlens.copyRemoteFileUrlToClipboard",
        "when": "isMac"
    },
    {
        "key": "alt+b",
        "command": "gitlens.toggleFileBlame",
        "when": "editorFocus && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:blameable'"
    },
    {
        "key": "alt+d",
        "command": "gitlens.toggleFileChanges"
    },
    {
        "key": "alt+m",
        "command": "gitlens.toggleFileHeatmap"
    },
    {
        "key": "alt+r",
        "command": "gitlens.openRevisionFile",
        "when": "gitlens:activeFileStatus =~ /revision/"
    },
    {
        "key": "alt+r",
        "command": "gitlens.openFileRevision",
        "when": "!(gitlens:activeFileStatus =~ /revision/)"
    },
    {
        "key": "alt+cmd+g",
        "command": "workbench.view.extension.gitlensInspect",
        "when": "isMac && config.gitlens.keymap == 'alternate' && activeViewlet != 'workbench.view.extension.gitlensInspect'"
    },
    {
        "key": "alt+cmd+g",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "isMac && config.gitlens.keymap == 'alternate' && activeViewlet == 'workbench.view.extension.gitlensInspect'"
    },
    {
        "key": "ctrl+k ctrl+shift+g",
        "command": "workbench.view.extension.gitlens",
        "when": "!isMac && config.gitlens.keymap == 'alternate'"
    },
    {
        "key": "cmd+enter",
        "command": "gitlens.graph.openChangedFileDiffs",
        "when": "isMac && gitlens:webview:graph:focus"
    },
    {
        "key": "ctrl+enter",
        "command": "gitlens.graph.openChangedFileDiffs",
        "when": "!isMac && gitlens:webview:graph:focus"
    },
    {
        "key": "alt+enter",
        "command": "gitlens.graph.openChangedFileDiffsWithWorking",
        "when": "gitlens:webview:graph:focus"
    },
    {
        "key": "alt+,",
        "command": "gitlens.diffWithPrevious",
        "when": "!isInDiffEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
    },
    {
        "key": "alt+,",
        "command": "gitlens.diffWithPreviousInDiffLeft",
        "when": "isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
    },
    {
        "key": "alt+,",
        "command": "gitlens.diffWithPreviousInDiffRight",
        "when": "isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'"
    },
    {
        "key": "alt+.",
        "command": "gitlens.diffWithNext",
        "when": "gitlens:enabled && !isInDiffEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
    },
    {
        "key": "alt+.",
        "command": "gitlens.diffWithNextInDiffLeft",
        "when": "gitlens:enabled && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
    },
    {
        "key": "alt+.",
        "command": "gitlens.diffWithNextInDiffRight",
        "when": "gitlens:enabled && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/"
    },
    //
    // emojisense
    //
    {
        "key": "ctrl+alt+e",
        "command": "emojisense.quickEmoji",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+i",
        "command": "-emojisense.quickEmoji",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+e",
        "command": "emojisense.quickEmojitext",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-emojisense.quickEmojitext",
        "when": "editorTextFocus"
    },
    //
    // ChromeOS - spare ctrl+space for input method switch
    //
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !isLinux && !isMac && !isWindows"
    },
    {
        "key": "ctrl+space",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus && !isLinux && !isMac && !isWindows"
    },
    //
    // Minimize/Maximize
    //
    {
        "key": "ctrl+m",
        "command": "workbench.action.minimizeOtherEditors"
    },
    {
        "key": "alt+cmd+j",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    //
    // Panel - Alignment
    //
    {
        "key": "alt+shift+j",
        "command": "workbench.action.alignPanelJustify",
        "when": "panelVisible && panelAlignment != 'justify'"
    },
    {
        "key": "alt+shift+j",
        "command": "workbench.action.alignPanelCenter",
        "when": "panelVisible && panelAlignment != 'center'"
    },
    //
    // Toggle Output Panel
    //
    {
        "key": "ctrl+shift+u",
        "command": "workbench.action.output.toggleOutput",
        "when": "!isMac && workbench.panel.output.active"
    },
    {
        "key": "ctrl+k ctrl+h",
        "command": "workbench.action.output.toggleOutput",
        "when": "!isMac && workbench.panel.output.active"
    },
    {
        "key": "cmd+k cmd+h",
        "command": "workbench.action.output.toggleOutput",
        "when": "isMac && workbench.panel.output.active"
    },
    //
    // Notifications
    //
    {
        "key": "alt+n",
        "command": "notifications.toggleList"
    },
    //
    // View Size
    //
    {
        "key": "ctrl+alt+=",
        "command": "workbench.action.increaseViewSize",
        "when": "!isMac"
    },
    {
        "key": "ctrl+alt+-",
        "command": "workbench.action.decreaseViewSize",
        "when": "!isMac"
    },
    {
        "key": "ctrl+cmd+=",
        "command": "workbench.action.increaseViewSize",
        "when": "isMac"
    },
    {
        "key": "ctrl+cmd+-",
        "command": "workbench.action.decreaseViewSize",
        "when": "isMac"
    },
    //
    // Zoom
    //
    {
        "key": "ctrl+shift+-",
        "command": "workbench.action.zoomOut",
        "when": "isLinux"
    },
    {
        "key": "shift+cmd+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "shift+cmd+-",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "shift+cmd+=",
        "command": "editor.action.fontZoomIn",
        "when": "isMac"
    },
    {
        "key": "shift+cmd+-",
        "command": "editor.action.fontZoomOut",
        "when": "isMac"
    },
    {
        "key": "shift+cmd+0",
        "command": "editor.action.fontZoomReset",
        "when": "isMac"
    },
    //
    // Python
    //
    {
        "key": "ctrl+k i",
        "command": "python.setInterpreter",
        "when": "!isMac"
    },
    {
        "key": "cmd+k i",
        "command": "python.setInterpreter",
        "when": "isMac"
    },
    //
    // sandcastle.vscode-open
    //
    {
        "key": "alt+cmd+o",
        "command": "-workbench.action.files.openFileWithDefaultApplication"
    },
    {
        "key": "ctrl+cmd+o",
        "command": "workbench.action.files.openFileWithDefaultApplication",
        "when": "isMac"
    },
    //
    // Reopen Editor
    //
    {
        "key": "cmd+k shift+cmd+e",
        "command": "workbench.action.reopenWithEditor",
        "when": "isMac"
    },
    {
        "key": "ctrl+k ctrl+shift+e",
        "command": "workbench.action.reopenWithEditor",
        "when": "!isMac"
    },
    {
        "key": "cmd+k shift+cmd+t",
        "command": "workbench.action.reopenTextEditor",
        "when": "isMac"
    },
    {
        "key": "ctrl+k ctrl+shift+t",
        "command": "workbench.action.reopenTextEditor",
        "when": "!isMac"
    },
    // yzhang.markdown-all-in-one
    {
        "key": "cmd+b",
        "command": "-markdown.extension.editing.toggleBold",
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    },
    //
    // history
    //
    {
        "key": "ctrl+p",
        "command": "history.showPrevious",
        "when": "isMac && historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+n",
        "command": "history.showNext",
        "when": "isMac && historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !suggestWidgetVisible"
    },
    //
    // SQL Server (mssql)
    //
    {
        "key": "shift+cmd+e",
        "command": "-mssql.runQuery",
        "when": "editorTextFocus && editorLangId == 'sql'"
    },
    {
        "key": "alt+cmd+d",
        "command": "-workbench.view.extension.objectExplorer"
    },
    //
    // type tab
    //
    {
        "key": "ctrl+k tab",
        "command": "type",
        "args": { "text": "\t" },
        "when": "!isMac && editorTextFocus"
    },
    {
        "key": "cmd+k tab",
        "command": "type",
        "args": { "text": "\t" },
        "when": "isMac && editorTextFocus"
    },
    //
    // edit with shell
    //
    {
        "key": "cmd+k cmd+e",
        "command": "runCommands",
        "args": {
            "commands": [
                "editWithShell.runCommand",
                "editWithShell.runCommand"
            ]
        },
        "when": "isMac && !inKeybindings"
    },
    {
        "key": "ctrl+k ctrl+e",
        "command": "runCommands",
        "args": {
            "commands": [
                "editWithShell.runCommand",
                "editWithShell.runCommand"
            ]
        },
        "when": "!isMac && !inKeybindings"
    },
    //
    // GitOps
    //
    {
        "key": "ctrl+shift+o",
        "command": "gitops.views.workloads.focus",
        "when": "isMac"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.view.extension.kubernetesView",
        "when": "isMac"
    },
    //
    // redhat.ansible
    //
    {
        "key": "tab",
        "command": "-ansible.lightspeed.inlineSuggest.accept",
        "when": "inlineSuggestionVisible && editorLangId == 'ansible'"
    },
    {
        "key": "tab",
        "command": "ansible.lightspeed.inlineSuggest.accept",
        "when": "config.ansible.lightspeed.enabled && config.ansible.lightspeed.suggestions.enabled && inlineSuggestionVisible && editorLangId == 'ansible'"
    },
    {
        "key": "escape",
        "command": "-ansible.lightspeed.inlineSuggest.hide",
        "when": "inlineSuggestionVisible && editorLangId == 'ansible'"
    },
    {
        "key": "escape",
        "command": "ansible.lightspeed.inlineSuggest.hide",
        "when": "config.ansible.lightspeed.enabled && config.ansible.lightspeed.suggestions.enabled && inlineSuggestionVisible && editorLangId == 'ansible'"
    },
    //
    // Azure
    //
    {
        "key": "shift+cmd+a",
        "command": "-workbench.view.extension.azure"
    },
    {
        "key": "shift+cmd+a",
        "command": "workbench.view.extension.azure",
        "when": "isMac && !notificationFocus && !notificationToastsVisible"
    },
    //
    // Couchbase
    //
    {
        "key": "shift+cmd+e",
        "command": "-vscode-couchbase.runQuery",
        "when": "vscode-couchbase.runButtonEnabled && !isKVCluster && editorLangId == 'n1ql' || vscode-couchbase.runButtonEnabled && !isKVCluster && editorLangId == 'sqlpp' || vscode-couchbase.runButtonEnabled && !isKVCluster && resourceFilename =~ /.n1ql$/ || vscode-couchbase.runButtonEnabled && !isKVCluster && resourceFilename =~ /.sqlpp$/"
    },
    {
        "key": "shift+cmd+e",
        "command": "-vscode-couchbase.runSearch",
        "when": "isSearchEnabled && vscode-couchbase.runSearchButtonEnabled && !isKVCluster && editorLangId == 'json' && resourceFilename =~ /\\.cbs\\.json$/"
    },
    {
        "key": "ctrl+shift+c",
        "command": "couchbase.focus",
        "when": "isMac"
    },
    //
    // Cursor
    //
    {
        "key": "shift+cmd+j",
        "command": "-aiSettings.action.open",
        "when": "!isSettingsPaneOpen"
    },
    {
        "key": "shift+cmd+k",
        "command": "-aipopup.action.modal.generate",
        "when": "editorFocus && !composerBarIsVisible && !composerControlPanelIsVisible"
    },
    {
        "key": "cmd+k",
        "command": "workbench.action.keychord.leader",
        "when": "false"
    },
    {
        "key": "cmd+r",
        "command": "-workbench.action.keychord.leader",
        "when": "false"
    },
    //
    // Cursor generated
    //
    {
        "key": "cmd+k cmd+c",
        "command": "editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+r cmd+c",
        "command": "-editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+k cmd+f",
        "command": "editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+r cmd+f",
        "command": "-editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+k cmd+d",
        "command": "editor.action.moveSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "cmd+r cmd+d",
        "command": "-editor.action.moveSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "cmd+k alt+cmd+down",
        "command": "editor.action.nextCommentingRange",
        "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
    },
    {
        "key": "cmd+r alt+cmd+down",
        "command": "-editor.action.nextCommentingRange",
        "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
    },
    {
        "key": "cmd+k alt+cmd+up",
        "command": "editor.action.previousCommentingRange",
        "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
    },
    {
        "key": "cmd+r alt+cmd+up",
        "command": "-editor.action.previousCommentingRange",
        "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
    },
    {
        "key": "cmd+k cmd+u",
        "command": "editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+r cmd+u",
        "command": "-editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+k f12",
        "command": "editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+r f12",
        "command": "-editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+k cmd+f12",
        "command": "editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+r cmd+f12",
        "command": "-editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+k cmd+k",
        "command": "editor.action.selectFromAnchorToCursor",
        "when": "editorTextFocus && selectionAnchorSet"
    },
    {
        "key": "cmd+r cmd+k",
        "command": "-editor.action.selectFromAnchorToCursor",
        "when": "editorTextFocus && selectionAnchorSet"
    },
    {
        "key": "cmd+k cmd+b",
        "command": "editor.action.setSelectionAnchor",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+r cmd+b",
        "command": "-editor.action.setSelectionAnchor",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+k cmd+i",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+r cmd+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+k cmd+x",
        "command": "editor.action.trimTrailingWhitespace",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+r cmd+x",
        "command": "-editor.action.trimTrailingWhitespace",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+k cmd+,",
        "command": "editor.createFoldingRangeFromSelection",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+r cmd+,",
        "command": "-editor.createFoldingRangeFromSelection",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+i",
        "command": "editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "cmd+r cmd+i",
        "command": "-editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "cmd+k cmd+0",
        "command": "editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+r cmd+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+/",
        "command": "editor.foldAllBlockComments",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+r cmd+/",
        "command": "-editor.foldAllBlockComments",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+-",
        "command": "editor.foldAllExcept",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+r cmd+-",
        "command": "-editor.foldAllExcept",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+8",
        "command": "editor.foldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+r cmd+8",
        "command": "-editor.foldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+1",
        "command": "editor.foldLevel1",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+r cmd+1",
        "command": "-editor.foldLevel1",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+2",
        "command": "editor.foldLevel2",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+r cmd+2",
        "command": "-editor.foldLevel2",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+3",
        "command": "editor.foldLevel3",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+r cmd+3",
        "command": "-editor.foldLevel3",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+4",
        "command": "editor.foldLevel4",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+r cmd+4",
        "command": "-editor.foldLevel4",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+5",
        "command": "editor.foldLevel5",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+r cmd+5",
        "command": "-editor.foldLevel5",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+6",
        "command": "editor.foldLevel6",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+r cmd+6",
        "command": "-editor.foldLevel6",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+7",
        "command": "editor.foldLevel7",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+r cmd+7",
        "command": "-editor.foldLevel7",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+[",
        "command": "editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+r cmd+[",
        "command": "-editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+.",
        "command": "editor.removeManualFoldingRanges",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+r cmd+.",
        "command": "-editor.removeManualFoldingRanges",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+l",
        "command": "editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+r cmd+l",
        "command": "-editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k shift+cmd+l",
        "command": "editor.toggleFoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+r shift+cmd+l",
        "command": "-editor.toggleFoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+j",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+r cmd+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+=",
        "command": "editor.unfoldAllExcept",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+r cmd+=",
        "command": "-editor.unfoldAllExcept",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+9",
        "command": "editor.unfoldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+r cmd+9",
        "command": "-editor.unfoldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+]",
        "command": "editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+r cmd+]",
        "command": "-editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k f2",
        "command": "togglePeekWidgetFocus",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    {
        "key": "cmd+r f2",
        "command": "-togglePeekWidgetFocus",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    {
        "key": "cmd+k alt+cmd+c",
        "command": "workbench.action.addComment"
    },
    {
        "key": "cmd+r alt+cmd+c",
        "command": "-workbench.action.addComment"
    },
    {
        "key": "cmd+k cmd+g",
        "command": "aiFeedback.action.open"
    },
    {
        "key": "cmd+r cmd+g",
        "command": "-aiFeedback.action.open"
    },
    {
        "key": "cmd+k alt+cmd+c",
        "command": "copyFilePath",
        "when": "editorFocus"
    },
    {
        "key": "cmd+r alt+cmd+c",
        "command": "-copyFilePath",
        "when": "editorFocus"
    },
    {
        "key": "cmd+k shift+alt+cmd+c",
        "command": "copyRelativeFilePath",
        "when": "editorFocus"
    },
    {
        "key": "cmd+r shift+alt+cmd+c",
        "command": "-copyRelativeFilePath",
        "when": "editorFocus"
    },
    {
        "key": "cmd+k cmd+k",
        "command": "editor.action.defineKeybinding",
        "when": "resource == 'vscode-userdata:/Users/lxk/Library/Application%20Support/Cursor/User/keybindings.json'"
    },
    {
        "key": "cmd+r cmd+k",
        "command": "-editor.action.defineKeybinding",
        "when": "resource == 'vscode-userdata:/Users/lxk/Library/Application%20Support/Cursor/User/keybindings.json'"
    },
    {
        "key": "cmd+r i",
        "command": "-inlineChat.start",
        "when": "editorFocus && inlineChatHasProvider && !editorReadonly"
    },
    {
        "key": "cmd+k cmd+a",
        "command": "keybindings.editor.addKeybinding",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "cmd+r cmd+a",
        "command": "-keybindings.editor.addKeybinding",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "cmd+k cmd+e",
        "command": "keybindings.editor.defineWhenExpression",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "cmd+r cmd+e",
        "command": "-keybindings.editor.defineWhenExpression",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "cmd+k cmd+i",
        "command": "list.showHover",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "cmd+r cmd+i",
        "command": "-list.showHover",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "cmd+k i",
        "command": "notebook.cell.chat.start",
        "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
    },
    {
        "key": "cmd+r i",
        "command": "-notebook.cell.chat.start",
        "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
    },
    {
        "key": "cmd+k cmd+c",
        "command": "notebook.cell.collapseCellInput",
        "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
    },
    {
        "key": "cmd+r cmd+c",
        "command": "-notebook.cell.collapseCellInput",
        "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
    },
    {
        "key": "cmd+k t",
        "command": "notebook.cell.collapseCellOutput",
        "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
    },
    {
        "key": "cmd+r t",
        "command": "-notebook.cell.collapseCellOutput",
        "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
    },
    {
        "key": "cmd+k cmd+c",
        "command": "notebook.cell.expandCellInput",
        "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
    },
    {
        "key": "cmd+r cmd+c",
        "command": "-notebook.cell.expandCellInput",
        "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
    },
    {
        "key": "cmd+k t",
        "command": "notebook.cell.expandCellOutput",
        "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
    },
    {
        "key": "cmd+r t",
        "command": "-notebook.cell.expandCellOutput",
        "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
    },
    {
        "key": "cmd+k shift+cmd+\\",
        "command": "notebook.cell.split",
        "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
    },
    {
        "key": "cmd+r shift+cmd+\\",
        "command": "-notebook.cell.split",
        "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
    },
    {
        "key": "cmd+k y",
        "command": "notebook.cell.toggleOutputScrolling",
        "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus"
    },
    {
        "key": "cmd+r y",
        "command": "-notebook.cell.toggleOutputScrolling",
        "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus"
    },
    {
        "key": "cmd+k shift+cmd+n",
        "command": "notifications.showList"
    },
    {
        "key": "cmd+r shift+cmd+n",
        "command": "-notifications.showList"
    },
    {
        "key": "cmd+k cmd+w",
        "command": "workbench.action.closeAllEditors"
    },
    {
        "key": "cmd+r cmd+w",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "cmd+k shift+cmd+w",
        "command": "workbench.action.closeAllGroups"
    },
    {
        "key": "cmd+r shift+cmd+w",
        "command": "-workbench.action.closeAllGroups"
    },
    {
        "key": "cmd+k w",
        "command": "workbench.action.closeEditorsInGroup"
    },
    {
        "key": "cmd+r w",
        "command": "-workbench.action.closeEditorsInGroup"
    },
    {
        "key": "cmd+k f",
        "command": "workbench.action.closeFolder",
        "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
    },
    {
        "key": "cmd+r f",
        "command": "-workbench.action.closeFolder",
        "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
    },
    {
        "key": "cmd+k u",
        "command": "workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "cmd+r u",
        "command": "-workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "cmd+k shift+o",
        "command": "workbench.action.compareEditor.openSide",
        "when": "inDiffEditor"
    },
    {
        "key": "cmd+r shift+o",
        "command": "-workbench.action.compareEditor.openSide",
        "when": "inDiffEditor"
    },
    {
        "key": "cmd+k o",
        "command": "workbench.action.copyEditorToNewWindow",
        "when": "activeEditor"
    },
    {
        "key": "cmd+r o",
        "command": "-workbench.action.copyEditorToNewWindow",
        "when": "activeEditor"
    },
    {
        "key": "cmd+k m",
        "command": "workbench.action.editor.changeLanguageMode",
        "when": "!notebookEditorFocused"
    },
    {
        "key": "cmd+r m",
        "command": "-workbench.action.editor.changeLanguageMode",
        "when": "!notebookEditorFocused"
    },
    {
        "key": "cmd+k p",
        "command": "workbench.action.files.copyPathOfActiveFile"
    },
    {
        "key": "cmd+r p",
        "command": "-workbench.action.files.copyPathOfActiveFile"
    },
    {
        "key": "cmd+k r",
        "command": "workbench.action.files.revealActiveFileInWindows"
    },
    {
        "key": "cmd+r r",
        "command": "-workbench.action.files.revealActiveFileInWindows"
    },
    {
        "key": "cmd+k s",
        "command": "workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "cmd+r s",
        "command": "-workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "cmd+k cmd+up",
        "command": "workbench.action.focusAboveGroup"
    },
    {
        "key": "cmd+r cmd+up",
        "command": "-workbench.action.focusAboveGroup"
    },
    {
        "key": "cmd+k cmd+down",
        "command": "workbench.action.focusBelowGroup"
    },
    {
        "key": "cmd+r cmd+down",
        "command": "-workbench.action.focusBelowGroup"
    },
    {
        "key": "cmd+k cmd+left",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "cmd+r cmd+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "cmd+k cmd+right",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "cmd+r cmd+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "cmd+k shift+cmd+\\",
        "command": "workbench.action.joinEditorInGroup",
        "when": "sideBySideEditorActive"
    },
    {
        "key": "cmd+r shift+cmd+\\",
        "command": "-workbench.action.joinEditorInGroup",
        "when": "sideBySideEditorActive"
    },
    {
        "key": "cmd+k enter",
        "command": "workbench.action.keepEditor"
    },
    {
        "key": "cmd+r enter",
        "command": "-workbench.action.keepEditor"
    },
    {
        "key": "cmd+k down",
        "command": "workbench.action.moveActiveEditorGroupDown"
    },
    {
        "key": "cmd+r down",
        "command": "-workbench.action.moveActiveEditorGroupDown"
    },
    {
        "key": "cmd+k left",
        "command": "workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "cmd+r left",
        "command": "-workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "cmd+k right",
        "command": "workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "cmd+r right",
        "command": "-workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "cmd+k up",
        "command": "workbench.action.moveActiveEditorGroupUp"
    },
    {
        "key": "cmd+r up",
        "command": "-workbench.action.moveActiveEditorGroupUp"
    },
    {
        "key": "cmd+k shift+cmd+left",
        "command": "workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "cmd+r shift+cmd+left",
        "command": "-workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "cmd+k shift+cmd+right",
        "command": "workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "cmd+r shift+cmd+right",
        "command": "-workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "cmd+k cmd+q",
        "command": "workbench.action.navigateToLastEditLocation"
    },
    {
        "key": "cmd+r cmd+q",
        "command": "-workbench.action.navigateToLastEditLocation"
    },
    {
        "key": "cmd+k alt+cmd+right",
        "command": "workbench.action.nextEditorInGroup"
    },
    {
        "key": "cmd+r alt+cmd+right",
        "command": "-workbench.action.nextEditorInGroup"
    },
    {
        "key": "cmd+k cmd+s",
        "command": "workbench.action.openGlobalKeybindings"
    },
    {
        "key": "cmd+r cmd+s",
        "command": "-workbench.action.openGlobalKeybindings"
    },
    {
        "key": "cmd+r shift+enter",
        "command": "-workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    },
    {
        "key": "cmd+k alt+cmd+left",
        "command": "workbench.action.previousEditorInGroup"
    },
    {
        "key": "cmd+r alt+cmd+left",
        "command": "-workbench.action.previousEditorInGroup"
    },
    {
        "key": "cmd+k cmd+t",
        "command": "workbench.action.selectTheme"
    },
    {
        "key": "cmd+r cmd+t",
        "command": "-workbench.action.selectTheme"
    },
    {
        "key": "cmd+k cmd+\\",
        "command": "workbench.action.splitEditorDown"
    },
    {
        "key": "cmd+r cmd+\\",
        "command": "-workbench.action.splitEditorDown"
    },
    {
        "key": "cmd+k shift+cmd+\\",
        "command": "workbench.action.splitEditorInGroup",
        "when": "activeEditorCanSplitInGroup"
    },
    {
        "key": "cmd+r shift+cmd+\\",
        "command": "-workbench.action.splitEditorInGroup",
        "when": "activeEditorCanSplitInGroup"
    },
    {
        "key": "cmd+k cmd+\\",
        "command": "workbench.action.splitEditorLeft"
    },
    {
        "key": "cmd+r cmd+\\",
        "command": "-workbench.action.splitEditorLeft"
    },
    {
        "key": "cmd+k cmd+\\",
        "command": "workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "cmd+r cmd+\\",
        "command": "-workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "cmd+k cmd+\\",
        "command": "workbench.action.splitEditorRight"
    },
    {
        "key": "cmd+r cmd+\\",
        "command": "-workbench.action.splitEditorRight"
    },
    {
        "key": "cmd+k cmd+\\",
        "command": "workbench.action.splitEditorUp"
    },
    {
        "key": "cmd+r cmd+\\",
        "command": "-workbench.action.splitEditorUp"
    },
    {
        "key": "cmd+k cmd+i",
        "command": "workbench.action.terminal.focusHover",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
    },
    {
        "key": "cmd+r cmd+i",
        "command": "-workbench.action.terminal.focusHover",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
    },
    {
        "key": "cmd+k cmd+m",
        "command": "workbench.action.toggleMaximizeEditorGroup",
        "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
    },
    {
        "key": "cmd+r cmd+m",
        "command": "-workbench.action.toggleMaximizeEditorGroup",
        "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
    },
    {
        "key": "cmd+k z",
        "command": "workbench.action.toggleZenMode",
        "when": "!isAuxiliaryWindowFocusedContext"
    },
    {
        "key": "cmd+r z",
        "command": "-workbench.action.toggleZenMode",
        "when": "!isAuxiliaryWindowFocusedContext"
    },
    {
        "key": "cmd+r shift+enter",
        "command": "-workbench.action.unpinEditor",
        "when": "activeEditorIsPinned"
    },
    {
        "key": "cmd+k c",
        "command": "workbench.files.action.compareWithClipboard"
    },
    {
        "key": "cmd+r c",
        "command": "-workbench.files.action.compareWithClipboard"
    },
    {
        "key": "cmd+k d",
        "command": "workbench.files.action.compareWithSaved"
    },
    {
        "key": "cmd+r d",
        "command": "-workbench.files.action.compareWithSaved"
    },
    {
        "key": "cmd+k e",
        "command": "workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "key": "cmd+r e",
        "command": "-workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "key": "cmd+k down",
        "command": "views.moveViewDown",
        "when": "focusedView != ''"
    },
    {
        "key": "cmd+r down",
        "command": "-views.moveViewDown",
        "when": "focusedView != ''"
    },
    {
        "key": "cmd+k left",
        "command": "views.moveViewLeft",
        "when": "focusedView != ''"
    },
    {
        "key": "cmd+r left",
        "command": "-views.moveViewLeft",
        "when": "focusedView != ''"
    },
    {
        "key": "cmd+k right",
        "command": "views.moveViewRight",
        "when": "focusedView != ''"
    },
    {
        "key": "cmd+r right",
        "command": "-views.moveViewRight",
        "when": "focusedView != ''"
    },
    {
        "key": "cmd+k up",
        "command": "views.moveViewUp",
        "when": "focusedView != ''"
    },
    {
        "key": "cmd+r up",
        "command": "-views.moveViewUp",
        "when": "focusedView != ''"
    },
]