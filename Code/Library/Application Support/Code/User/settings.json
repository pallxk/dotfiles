// Place your settings in this file to overwrite the default settings
{
  // wwm.better-align
  "alignment.surroundSpace": {
    "arrow": [
      1,
      1
    ],
    "assignment": [
      1,
      1
    ],
    "colon": [
      -1,
      1
    ],
    "comment": 2
  },

  // dhoeric.ansible-vault
  "ansibleVault.keyfile": "~/bin/ansible-vault-password-helper",

  // atlassian.atlascode
  "atlascode.bitbucket.statusbar.showProduct": true,
  "atlascode.bitbucket.statusbar.showUser": true,
  "atlascode.bitbucket.statusbar.showLogin": true,
  "atlascode.bitbucket.statusbar.enabled": false,
  "atlascode.jira.statusbar.showProduct": true,
  "atlascode.jira.statusbar.showUser": true,
  "atlascode.jira.statusbar.showLogin": true,
  "atlascode.jira.statusbar.enabled": false,

  // ms-python.black-formatter
  "black-formatter.importStrategy": "fromEnvironment",
  "black-formatter.showNotifications": "always",

  // formulahendry.code-runner
  "code-runner.runInTerminal": true,

  // streetsidesoftware.code-spell-checker
  "cSpell.customDictionaries": {
    "personal": {
      "name": "personal",
      "path": "~/.cspell/personal.txt",
      "addWords": true
    }
  },
  "cSpell.enableFiletypes": [
    "Log",
    "ansible",
    "azcli",
    "azure-pipelines",
    "bat",
    "clojure",
    "code-text-binary",
    "coffeescript",
    "cuda-cpp",
    "dart",
    "diff",
    "dockercompose",
    "dockerfile",
    "dotenv",
    "fsharp",
    "git-rebase",
    "gradle",
    "groovy",
    "gsp",
    "helm",
    "hlsl",
    "hosts",
    "ignore",
    "ini",
    "jq",
    "jsx-tags",
    "julia",
    "juliamarkdown",
    "jvmoptions",
    "log",
    "lua",
    "makefile",
    "markdown-math",
    "objective-c",
    "objective-cpp",
    "perl",
    "perl6",
    "powershell",
    "properties",
    "r",
    "razor",
    "ruby",
    "scminput",
    "search-result",
    "shaderlab",
    "shellscript",
    "sql",
    "swift",
    "terraform",
    "terraform-vars",
    "toml",
    "vb",
    "xml",
    "xsl",
    "zip"
  ],

  "debug.confirmOnExit": "always",
  "debug.toolBarLocation": "commandCenter",

  "diffEditor.codeLens": true,
  "diffEditor.diffAlgorithm": "advanced",
  "diffEditor.ignoreTrimWhitespace": false,
  "diffEditor.renderSideBySide": false,

  "diffEditor.experimental.showMoves": true,

  "diffEditor.hideUnchangedRegions.enabled": true,

  "editor.acceptSuggestionOnEnter": "off",
  "editor.accessibilitySupport": "off",
  "editor.cursorSurroundingLines": 3,
  "editor.fontFamily": "'M PLUS 1 Code', Consolas, 'Droid Sans Mono', monospace, FontAwesome",
  "editor.fontSize": 14,
  "editor.formatOnSave": true,
  "editor.formatOnSaveMode": "modifications",
  "editor.letterSpacing": -0.5,
  "editor.mouseWheelZoom": true,
  "editor.occurrencesHighlight": "multiFile",
  "editor.renderWhitespace": "boundary",
  "editor.rulers": [ 80, 120, 160 ],
  "editor.scrollbar.scrollByPage": true,
  "editor.suggestSelection": "first",
  "editor.tabSize": 2,

  "editor.bracketPairColorization.enabled": true,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,

  "editor.codeActionWidget.includeNearbyQuickFixes": true,

  "editor.find.autoFindInSelection": "multiline",

  "editor.guides.bracketPairs": true,
  "editor.guides.indentation": true,

  "editor.inlayHints.enabled": "offUnlessPressed",

  "editor.inlineSuggest.enabled": true,

  "editor.minimap.renderCharacters": false,
  "editor.minimap.sectionHeaderFontSize": 8,
  "editor.minimap.showSlider": "always",
  "editor.minimap.size": "fit",

  "editor.semanticHighlighting.enabled": true,

  "editor.stickyScroll.enabled": true,

  // ryu1kn.edit-with-shell
  "editWithShell.processEntireTextIfNoneSelected": true,

  "emmet.includeLanguages": {
    "wxml": "html"
  },

  "explorer.autoReveal": false,
  // Controls whether the explorer should render folders in a compact form. In such a form, single child folders will be compressed in a combined tree element. Useful for Java package structures, for example.
  "explorer.compactFolders": false,
  // Controls if the explorer should ask for confirmation when deleting a file via the trash.
  "explorer.confirmDelete": false,
  // Controls if the explorer should ask for confirmation to move files and folders via drag and drop.
  "explorer.confirmDragAndDrop": false,
  "explorer.sortOrderLexicographicOptions": "upper",

  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.patterns": {
    "*.ts": "${capture}.js",
    "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
    "*.jsx": "${capture}.js",
    "*.tsx": "${capture}.ts",
    "Dockerfile": "*.Dockerfile",
    "tsconfig.json": "tsconfig.*.json",
    "package.json": "package-lock.json, yarn.lock",
    ".env": ".env.*",
    ".vault-password": ".vault-password.*",
    ".vault_password": ".vault_password_*",
    "*": "${basename}.*.${extname}"
  },

  "explorer.openEditors.minVisible": 9,
  "explorer.openEditors.visible": 99,

  "files.associations": {
    // Ansible
    "*.playbook": "ansible",
    "**/ansible/**/*.{yml,yaml}": "ansible",
    "**/{group_vars,host_vars}/**": "ansible",
    "**/{handlers,tasks}/**/*.{yml,yaml}": "ansible",
    // CSS
    "*.wxss": "css",
    // Dockerfile
    "Dockerfile_*": "dockerfile",
    // i3/sway
    "**/sway/{config,outputs}": "i3",
    "**/sway/**/*.conf": "i3",
    // ignore
    ".git-blame-ignore-revs": "ignore",
    // ini (Ansible)
    "**/ansible/hosts": "ini",
    "**/ansible/inventory.*": "ini",
    "inventory": "ini",
    // ini (Surge)
    "*.dconf": "ini",
    "*.sgmodule": "ini",
    "**/proxy/*.txt": "pip-requirements",
    "**/rule-set/*.txt": "pip-requirements",
    // JavaScript
    "*.wxs": "javascript",
    // Json
    "*.sub": "json",  // https://shadowsocks.org/guide/sip008.html
    "*.tfstate.backup": "json",
    // jsonc
    "*.cjson": "jsonc",
    // julia
    "*.dae": "julia",   // The syntax highlighting for Julia works for *.dae
    // ruby
    "Pluginfile": "ruby", // Used by fastlane
    // shellscript
    "**/*.backpack": "shellscript",
    // ssh_config
    "ssh_config": "ssh_config",
    "**/.ssh/*.conf": "ssh_config",
    "**/.ssh/config.d/*.conf": "ssh_config",
    "**/ssh_config.d/*": "ssh_config",
    "**/openconnect/*.config": "ssh_config",
    // Terraform
    "*.hcl": "terraform",
    // yaml
    "*.yaml.example": "yaml",
    "kubeconfig": "yaml",
    "*.kubeconfig": "yaml",
  },
  "files.autoSave": "off",

  "git.autoRepositoryDetection": "subFolders",
  "git.autofetch": true,
  "git.ignoreLimitWarning": true,
  "git.mergeEditor": true,
  "git.repositoryScanMaxDepth": 2,
  "git.untrackedChanges": "separate",

  "git-graph.maxDepthOfRepoSearch": 2,
  "git-graph.openToTheRepoOfTheActiveTextEditorDocument": true,

  "github.copilot.advanced": {
    "slashCommands": {
      "createWorkspace": true,
      "createNotebook": true,
      "search": true
    }
  },

  "github.copilot.enable": {
    "*": true,
    "yaml": true,
    "plaintext": true,
    "markdown": true
  },

  // GitLens
  "gitlens.defaultGravatarsStyle": "monsterid",
  "gitlens.advanced.fileHistoryFollowsRenames": true,
  "gitlens.advanced.messages": {
    "suppressCommitHasNoPreviousCommitWarning": true
  },
  "gitlens.blame.ignoreWhitespace": true,
  "gitlens.currentLine.enabled": false,
  "gitlens.graph.avatars": false,
  "gitlens.graph.commitOrdering": "author-date",
  "gitlens.graph.dateFormat": "YYYY-MM-DD HH:mm:ss",
  "gitlens.graph.dateStyle": "absolute",
  "gitlens.graph.dimMergeCommits": true,
  "gitlens.graph.layout": "editor",
  "gitlens.graph.minimap.enabled": true,
  "gitlens.graph.minimap.additionalTypes": [
    "tags",
    "stashes",
    "localBranches"
  ],
  "gitlens.graph.defaultItemLimit": 1000,
  "gitlens.graph.pageItemLimit": 1000,
  "gitlens.graph.searchItemLimit": 1000,
  "gitlens.graph.showDetailsView": "open",
  "gitlens.keymap": "alternate",
  "gitlens.telemetry.enabled": false,
  "gitlens.views.commitDetails.files.layout": "tree",

  // Go
  "go.toolsManagement.autoUpdate": true,

  // Groovy
  "groovyLint.insight.enable": false,

  // Java
  "java.configuration.checkProjectSettingsExclusions": false,
  "java.implementationsCodeLens.enabled": true,
  "java.referencesCodeLens.enabled": true,

  // JavaScript
  "javascript.inlayHints.enumMemberValues.enabled": true,
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "javascript.inlayHints.parameterNames.enabled": "all",
  "javascript.inlayHints.parameterTypes.enabled": true,
  "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
  "javascript.inlayHints.variableTypes.enabled": true,

  "json.maxItemsComputed": 10000,

  "lldb.library": "/Applications/Xcode.app/Contents/SharedFrameworks/LLDB.framework/Versions/A/LLDB",
  "lldb.launch.expressions": "native",
  "lldb.suppressUpdateNotifications": true,

  "makefile.configureOnOpen": true,

  "material-icon-theme.files.associations": {
    // Ansible
    "requirements.yml": "credits",
    "vault.yml": "lock",
  },
  "material-icon-theme.folders.associations": {
    // Ansible
    "group_vars": "ansible",
    "host_vars": "ansible",
    "inventories": "ansible",
    "defaults": "mappings",
    "vars": "mappings",
    "files": "template",
    "roles": "template",
    // CI
    "pipelines": "ci",
    // Config
    "etc": "config",
    // DevOps
    "devops": "project",
    // Helm
    "charts": "kubernetes",
  },
  "material-icon-theme.languages.associations": {
  },

  "minapp-vscode.disableAutoConfig": true,
  "problems.showCurrentInStatus": true,

  "python.analysis.typeCheckingMode": "basic",

  "redhat.telemetry.enabled": false,

  "remote.autoForwardPortsSource": "process",

  // Remote VSCode
  // @ext:rafaelmaiolla.remote-vscode
  "remote.dontShowPortAlreadyInUseError": true,
  "remote.host": "127.0.0.1",

  // Remote - SSH
  //"remote.SSH.path": "C:\\tools\\cygwin\\bin\\ssh.exe",
  "remote.SSH.connectTimeout": 30,
  "remote.SSH.useLocalServer": true,

  // Ruff
  "ruff.organizeImports": false,

  "scm.defaultViewMode": "tree",

  "security.workspace.trust.enabled": false,
  "security.workspace.trust.untrustedFiles": "open",

  "search.defaultViewMode": "tree",
  "search.exclude": {
    "**/*.retry": true,
    "**/*~": true
  },

  "search.searchEditor.defaultNumberOfContextLines": 3,
  "search.searchEditor.doubleClickBehaviour": "openLocationToSide",

  "search.useIgnoreFiles": false,

  "sqltools.disableChordKeybindings": true,

  "telemetry.telemetryLevel": "error",

  "terminal.external.osxExec": "iTerm.app",

  // For macOS, it's command+k for chords, and does not conflict with ctrl+k in terminal.
  "terminal.integrated.allowChords": false,
  "terminal.integrated.commandsToSkipShell": [
    "-workbench.action.files.newUntitledFile",  // ctrl+n
    "-workbench.action.quickOpen",              // ctrl+p
    "-workbench.action.quickOpenView",          // ctrl+q
    "-workbench.action.terminal.copySelection", // ctrl+c
    "-workbench.action.terminal.focusFind",     // ctrl+f
    "-workbench.action.terminal.killEditor",    // ctrl+w
    "-workbench.action.terminal.paste",         // ctrl+v
    "gitlens.showGraph",                              // ctrl+alt+g
    "search.action.collapseSearchResults",            // alt+backspace
    "workbench.action.togglePanel",                   // ctrl+j
    "workbench.action.alignPanelCenter",              // alt+shift+j
    "workbench.action.alignPanelJustify",             // alt+shift+j
    "workbench.action.toggleAuxiliaryBar",            // ctrl+alt+b
    "workbench.action.toggleSidebarVisibility",       // ctrl+shift+b (custom)
    "workbench.action.terminal.newWithCwd",           // ctrl+alt+1-9, required on Linux
    "workbench.action.decreaseViewSize",              // ctrl+alt+-
    "workbench.action.increaseViewSize",              // ctrl+alt+=
    "workbench.files.action.collapseExplorerFolders", // alt+backspace
  ],
  "terminal.integrated.confirmOnKill": "never",
  "terminal.integrated.enableBell": true,
  "terminal.integrated.enableMultiLinePasteWarning": false,
  "terminal.integrated.fontFamily": "'M PLUS 1 Code', 'mplus Nerd Font Mono', Consolas, 'Courier New', monospace, FontAwesome",
  "terminal.integrated.fontSize": 14,
  "terminal.integrated.gpuAcceleration": "canvas",
  "terminal.integrated.macOptionIsMeta": true,
  "terminal.integrated.persistentSessionScrollback": 10000,
  "terminal.integrated.rightClickBehavior": "paste",
  "terminal.integrated.scrollback": 10000,
  "terminal.integrated.tabs.enabled": false,

  "terminal.integrated.defaultProfile.linux": "bash",
  "terminal.integrated.profiles.linux": {
    "bash": {
      "path": "bash",
      "icon": "terminal-bash",
      "args": ["-l"]
    },
    "zsh": {
      "path": "zsh"
    },
    "fish": {
      "path": "fish"
    },
    "tmux": {
      "path": "tmux",
      "icon": "terminal-tmux"
    },
    "pwsh": {
      "path": "pwsh",
      "icon": "terminal-powershell"
    }
  },

  "terminal.integrated.defaultProfile.osx": "bash",
  "terminal.integrated.profiles.osx": {
    "bash": {
      "path": "/opt/homebrew/bin/bash",
      "icon": "terminal-bash",
      "args": ["-l"]
    }
  },

  "terraform.experimentalFeatures.prefillRequiredFields": true,

  // Configure glob patterns of file paths to exclude from linting
  "tslint.exclude": "**/{lib,out,dist}/**",

  // Control whether tslint is enabled for JavaScript files or not.
  "tslint.jsEnable": true,

  // Check if a global install TypeScript compiler (e.g. tsc) differs from the used TypeScript language service.
  "typescript.check.tscVersion": false,

  // TypeScript
  "typescript.inlayHints.enumMemberValues.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.parameterNames.enabled": "all",
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.variableTypes.enabled": true,

  "typescript.tsserver.experimental.enableProjectDiagnostics": true,

  "update.mode": "manual",

  // Get rid of that annoying message that shows up everytime you make a new file
  "vim.disableAnnoyingNeovimMessage": true,

  "vscode-neovim.neovimExecutablePaths.linux": "/usr/bin/nvim",
  "vscode-neovim.neovimExecutablePaths.win32": "C:\\tools\\neovim\\Neovim\\bin\\nvim.exe",
  "vscode-neovim.useWSL": false,

  "window.autoDetectColorScheme": true,
  "window.commandCenter": true,
  "window.title": "${rootName}${separator}${activeEditorShort}${separator}${profileName}",

  "workbench.colorTheme": "Default Light Modern",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.preferredDarkColorTheme": "Default Dark Modern",
  "workbench.preferredLightColorTheme": "Default Light Modern",

  "workbench.activityBar.location": "top",

  "workbench.editor.customLabels.patterns": {
    "**/Dockerfile": "${dirname}/${filename}",
    "**/*Dockerfile*": "${dirname}/${filename}.${extname}",
  },

  "workbench.editor.empty.hint": "hidden",
  "workbench.editor.preferHistoryBasedLanguageDetection": true,
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.pinnedTabSizing": "compact",
  "workbench.editor.scrollToSwitchTabs": true,
  "workbench.editor.showTabs": "single",
  "workbench.editor.tabActionCloseVisibility": false,
  "workbench.editor.wrapTabs": true,

  "workbench.editorAssociations": {
    "*.md": "default",
    "*.pdf": "pdf.preview",
    "*.xlsx": "gc-excelviewer-excel-editor"
  },

  "workbench.layoutControl.enabled": true,
  "workbench.layoutControl.type": "both",

  "workbench.sideBar.location": "right",

  "workbench.list.scrollByPage": true,

  "workbench.view.alwaysShowHeaderActions": true,

  "yaml.schemas": {
    "https://json.schemastore.org/bamboo-spec.json": "**/bamboo-specs/{[A-Z]*/*,plan-*}.{yml,yaml}",
    "https://json.schemastore.org/bamboo-spec.json#/definitions/job": "**/bamboo-specs/**/job**.{yml,yaml}",
    "https://json.schemastore.org/bamboo-spec.json#/definitions/keyValue": "**/bamboo-specs/**/variables**.{yml,yaml}",
    "https://json.schemastore.org/bamboo-spec.json#/definitions/permission": "**/bamboo-specs/**permissions**.{yml,yaml}",
  },

  "[dockerfile]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
  },

  "[javascript]": {
    "editor.wordSeparators": "`~!@#%^&*()-=+[{]}\\|;:'\",.<>/?",
  },

  "[markdown]": {
    "editor.tabSize": 4,
  },

  "[powershell]": {
    "editor.wordSeparators": "`~!@#%^&*()=+[{]}\\|;:'\",.<>/?",
  },

  "[python]": {
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "file",
    "editor.formatOnType": true,
    "editor.rulers": [ 88 ],
    "editor.tabSize": 4,
  },

  "[shellscript]": {
    "editor.wordSeparators": "`~!@#$%^&*()=+[{]}\\|;:'\",<>/?",
  },

  "[sql]": {
    "editor.tabSize": 4,
  },

  "[terraform][terraform-vars]": {
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "file",
  },
}
// vim:ft=javascript
