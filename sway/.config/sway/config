# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# clipboard (wl-clipboard) (wtype)
set $copy wl-copy --trim-newline
set $paste wl-paste | wtype -
# Your preferred terminal emulator
set $term terminator
set $term_floating foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu_args -i -l 10 --fn 'monospace 12' -p '>' -W .5
set $menu bemenu $menu_args
set $menu_run bemenu-run $menu_args
# Your preferred file manager
set $fm thunar
set $electron_args --enable-features=WebRTCPipeWireCapturer

### Behavior config
#
focus_on_window_activation smart
workspace_auto_back_and_forth yes

### Border config
#
default_border pixel 2
hide_edge_borders both

### Output configuration
#
include outputs
exec ~/.config/sway/scripts/set-primary-output
# Need to install swaybg to work
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_2048x1536.png fill
#
bindsym $mod+p exec pkill nwg-displays || nwg-displays
bindsym $mod+Shift+p exec pkill arandr || arandr
bindsym $mod+Ctrl+p exec wl-mirror "$(swaymsg -t get_outputs | jq -r .[].name | $menu)"
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 600 'swaylock -f -c 000000' \
         timeout 660 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Sound configuration
#
bindsym $mod+i exec pkill bemenu || pactl set-default-source "$(pactl list short sources | $menu -p source -W1 | cut -f2)"
bindsym $mod+o exec pkill bemenu || pactl set-default-sink "$(pactl list short sinks | $menu -p sink -W1 | cut -f2)"

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+grave exec swaymsg '[app_id=foot workspace=__focused__] move scratchpad' || swaymsg '[app_id=$term_floating] focus' || $term_floating
    bindsym $mod+Return exec $term
    bindsym $mod+Shift+Return exec $term_floating

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Lock
    bindsym Ctrl+Mod1+q exec wlogout || swaylock --color 000000

    # Start your launcher
    bindsym $mod+d fullscreen disable; exec pkill bemenu || $menu_run
    bindsym $mod+z fullscreen disable; exec pkill wofi || wofi

    # Start your file manager
    bindsym $mod+m exec swaymsg '[app_id=$fm workspace=__focused__] move scratchpad' || swaymsg '[app_id=$fm] focus' || $fm

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Switch focus by label
    bindsym $mod+Tab exec pkill wmfocus || wmfocus

    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    # Move focus on workspace
    bindsym $mod+Ctrl+$left workspace prev
    bindsym $mod+Ctrl+$down workspace prev
    bindsym $mod+Ctrl+$up workspace next
    bindsym $mod+Ctrl+$right workspace next
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Ctrl+Left workspace prev
    bindsym $mod+Ctrl+Down workspace prev
    bindsym $mod+Ctrl+Up workspace next
    bindsym $mod+Ctrl+Right workspace next
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace and focus
    bindsym $mod+Shift+1 move container to workspace number 1; workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2; workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3; workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4; workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5; workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6; workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7; workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8; workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9; workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10; workspace number 10
    # Move focused container to workspace
    bindsym $mod+Ctrl+1 move container to workspace number 1
    bindsym $mod+Ctrl+2 move container to workspace number 2
    bindsym $mod+Ctrl+3 move container to workspace number 3
    bindsym $mod+Ctrl+4 move container to workspace number 4
    bindsym $mod+Ctrl+5 move container to workspace number 5
    bindsym $mod+Ctrl+6 move container to workspace number 6
    bindsym $mod+Ctrl+7 move container to workspace number 7
    bindsym $mod+Ctrl+8 move container to workspace number 8
    bindsym $mod+Ctrl+9 move container to workspace number 9
    bindsym $mod+Ctrl+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Notifications:
#
    bindsym $mod+n exec "makoctl invoke; makoctl dismiss"
    bindsym $mod+Shift+n exec makoctl restore
    bindsym $mod+Backspace exec makoctl dismiss
    bindsym $mod+Shift+Backspace exec makoctl dismiss --all
#
# Connectivity:
#
    bindsym $mod+c exec 'pgrep openconnect || for c in ~/bin/*-openconnect; do "$c" & done'
#
# Screen shot:
#
    bindsym Print exec grimshot copy "$(echo -e 'active\narea\nwindow\noutput\nscreen' | $menu -p 'grimshot copy' || echo canceled)"
    bindsym Shift+Print exec grimshot save "$(echo -e 'active\narea\nwindow\noutput\nscreen' | $menu -p 'grimshot save' || echo canceled)" ~/Captures/"$(date +%Y-%m-%d_%H-%M-%S)".png
    bindsym Ctrl+Shift+Print exec grimshot --notify copy area
    bindsym Mod1+Shift+Print exec grimshot --notify copy window
    bindsym Mod1+Print exec grimshot --notify copy active
    bindsym Ctrl+Mod1+Print exec grimshot --notify copy output
    bindsym Ctrl+Print exec grimshot --notify copy screen
#
# Screen record:
#
    bindsym $mod+Print exec pkill -2 wf-recorder || wf-recorder-helper save "$(echo -e 'active\narea\nwindow\noutput' | $menu -p 'wf-recorder (w/o audio)' || echo canceled)" ~/Captures/"$(date +%Y-%m-%d_%H-%M-%S)".mp4
    bindsym $mod+Shift+Print exec pkill -2 wf-recorder || wf-recorder-helper --audio save "$(echo -e 'active\narea\nwindow\noutput' | $menu -p 'wf-recorder (w/ audio)' || echo canceled)" ~/Captures/"$(date +%Y-%m-%d_%H-%M-%S)".mp4
    bindsym $mod+Ctrl+Shift+Print exec pkill -2 wf-recorder || wf-recorder-helper --notify save area
    bindsym $mod+Mod1+Shift+Print exec pkill -2 wf-recorder || wf-recorder-helper --notify save window
    bindsym $mod+Mod1+Print exec pkill -2 wf-recorder || wf-recorder-helper --notify save active
    bindsym $mod+Ctrl+Mod1+Print exec pkill -2 wf-recorder || wf-recorder-helper --notify save output
    bindsym $mod+Ctrl+Print exec pkill -2 wf-recorder || wf-recorder-helper --notify save output

include /etc/sway/config.d/*
include config.d/*
