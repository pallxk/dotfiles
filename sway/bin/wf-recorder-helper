#!/bin/sh

## Adapted from Grimshot (https://github.com/swaywm/sway/blob/master/contrib/grimshot)

## wf-recorder-helper: a helper for wf-recorder
## Requirements:
##  - `wf-recorder`: screen recording program for wayland
##  - `slurp`: to select an area
##  - `swaymsg`: to read properties of current window
##  - `jq`: json utility to parse swaymsg output
##  - `notify-send`: to show notifications
## Those are needed to be installed, if unsure, run `wf-recorder-helper check`
##
## See `wf-recorder-helper usage` for further details.

getTargetDirectory() {
  test -f ${XDG_CONFIG_HOME:-~/.config}/user-dirs.dirs && \
    . ${XDG_CONFIG_HOME:-~/.config}/user-dirs.dirs

  echo ${XDG_SCREENSHOTS_DIR:-${XDG_PICTURES_DIR:-$HOME}}
}

if [ "$1" = "--notify" ]; then
  NOTIFY=yes
  shift 1
elif [ "$1" = "--audio" ]; then
  AUDIO=--audio
  shift 1
else
  AUDIO=
  NOTIFY=no
fi

ACTION=${1:-usage}
SUBJECT=${2:-output}
FILE=${3:-$(getTargetDirectory)/$(date -Ins).mp4}

if [ "$ACTION" != "save" ] && [ "$ACTION" != "check" ]; then
  echo "Usage:"
  echo "  wf-recorder-helper [--notify] [--audio] save [active|output|area|window] [FILE|-]"
  echo "  wf-recorder-helper check"
  echo "  wf-recorder-helper usage"
  echo ""
  echo "Commands:"
  echo "  save: Save the screen recording to a regular file or '-' to pipe to STDOUT."
  echo "  check: Verify if required tools are installed and exit."
  echo "  usage: Show this message and exit."
  echo ""
  echo "Targets:"
  echo "  active: Currently active window."
  echo "  output: Currently active output."
  echo "  area: Manually select a region."
  echo "  window: Manually select a window."
  exit
fi

notify() {
  notify-send -t 3000 -a wf-recorder-helper "$@"
}
notifyOk() {
  [ "$NOTIFY" = "no" ] && return

  TITLE=${2:-"Screen recording"}
  MESSAGE=${1:-"OK"}
  notify "$TITLE" "$MESSAGE"
}
notifyError() {
  if [ $NOTIFY = "yes" ]; then
    TITLE=${2:-"Screen recording"}
    MESSAGE=${1:-"Error taking screen recording with wf-recorder"}
    notify -u critical "$TITLE" "$MESSAGE"
  else
    echo $1
  fi
}

die() {
  MSG=${1:-Bye}
  notifyError "Error: $MSG"
  exit 2
}

check() {
  COMMAND=$1
  if command -v "$COMMAND" > /dev/null 2>&1; then
    RESULT="OK"
  else
    RESULT="NOT FOUND"
  fi
  echo "   $COMMAND: $RESULT"
}

takeScreenRecording() {
  FILE=$1
  GEOM=$2
  OUTPUT=$3
  if [ ! -z "$OUTPUT" ]; then
    wf-recorder $AUDIO -o "$OUTPUT" -f "$FILE" || die "Unable to invoke wf-recorder"
  elif [ -z "$GEOM" ]; then
    wf-recorder $AUDIO -f "$FILE" || die "Unable to invoke wf-recorder"
  else
    wf-recorder $AUDIO -g "$GEOM" -f "$FILE" || die "Unable to invoke wf-recorder"
  fi
}

if [ "$ACTION" = "check" ] ; then
  echo "Checking if required tools are installed. If something is missing, install it to your system and make it available in PATH..."
  check wf-recorder
  check slurp
  check swaymsg
  check jq
  check notify-send
  exit
elif [ "$SUBJECT" = "area" ] ; then
  GEOM=$(slurp -d)
  # Check if user exited slurp without selecting the area
  if [ -z "$GEOM" ]; then
    exit 1
  fi
  WHAT="Area"
elif [ "$SUBJECT" = "active" ] ; then
  FOCUSED=$(swaymsg -t get_tree | jq -r 'recurse(.nodes[]?, .floating_nodes[]?) | select(.focused)')
  GEOM=$(echo "$FOCUSED" | jq -r '.rect | "\(.x),\(.y) \(.width)x\(.height)"')
  APP_ID=$(echo "$FOCUSED" | jq -r '.app_id')
  WHAT="$APP_ID window"
elif [ "$SUBJECT" = "output" ] ; then
  GEOM=""
  OUTPUT=$(swaymsg -t get_outputs | jq -r '.[] | select(.focused)' | jq -r '.name')
  WHAT="$OUTPUT"
elif [ "$SUBJECT" = "window" ] ; then
  GEOM=$(swaymsg -t get_tree | jq -r '.. | select(.pid? and .visible?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' | slurp)
  # Check if user exited slurp without selecting the area
  if [ -z "$GEOM" ]; then
   exit 1
  fi
  WHAT="Window"
else
  die "Unknown subject to take a screen shot from" "$SUBJECT"
fi

if takeScreenRecording "$FILE" "$GEOM" "$OUTPUT"; then
  TITLE="Screen recording of $SUBJECT"
  MESSAGE=$(basename "$FILE")
  notifyOk "$MESSAGE" "$TITLE"
  echo $FILE
else
  notifyError "Error taking Screen recording with wf-recorder"
fi
