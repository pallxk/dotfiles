# Change the prefix key
# 'C-s' when in local sessions and 'C-q' when in SSH
unbind C-b
if '[ "${SSH_TTY}" ]' \
	'set -g prefix "C-q" ; bind "C-q" send-prefix' \
	'set -g prefix "C-s" ; bind "C-s" send-prefix'

# Status line
set -g status-left '#S> '
if '[ "${SSH_TTY}" ]' \
	'set -g status-right " #(az account show --query name) #(kubectl config current-context) #{?client_prefix,#[fg=white]^Q#[default],^Q} #H %y-%m-%d %R"' \
	'set -g status-right " #(az account show --query name) #(kubectl config current-context) #{?client_prefix,#[fg=white]^S#[default],^S} #H %y-%m-%d %R"'
set -g status-right-length 80

# Color support
set -g default-terminal 'screen-256color'

# More scrollback buffer
set -g history-limit 10000

# Highlight windows with activity
setw -g monitor-activity on

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1
bind -N "Select highest-numbered window" 0 select-window -t:$

# Set the client terminal title
set -g set-titles on
# Set the title as 'window_name | session_name | host_short'
if '[ "${SSH_TTY}" ]' \
	'set -g set-titles-string "#W | #S | #h"' \
	'set -g set-titles-string "#W | #S"'

# Open new windows and panes in current working directory
bind c new-window -c '#{pane_current_path}'
bind '"' split-window -c '#{pane_current_path}'
bind % split-window -h -c '#{pane_current_path}'
# Easy-to-remember split pane commands
bind - split-window -c '#{pane_current_path}'
bind | split-window -h -c '#{pane_current_path}'

# Use vi-style key bindings in copy and choice modes
set -g mode-keys vi
if '[ $(printf "2.4\n`tmux -V | cut -d\  -f2`\n" | sort -V | head -1) = 2.4 ]' \
"\
	bind-key -T copy-mode-vi 'v' send -X begin-selection; \
	bind-key -T copy-mode-vi 'y' send -X copy-selection; \
" "\
	bind -t vi-copy 'v' begin-selection; \
	bind -t vi-copy 'y' copy-selection; \
"

# moving between panes with vim movement keys
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# resize panes with vim movement keys
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# select/rotate panes
bind -r o select-pane -t :.+
bind -r C-o rotate-window -U
bind -r M-o rotate-window -D
bind -r '{' swap-pane -U
bind -r '}' swap-pane -D

# moving between windows with vim movement keys
bind p previous-window
bind n next-window
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# layouts
bind -r M-1 select-layout even-horizontal
bind -r M-2 select-layout even-vertical
bind -r M-3 select-layout main-horizontal
bind -r M-4 select-layout main-vertical
bind -r M-5 select-layout tiled
bind -r Space next-layout

# Mouse support
# Conditionally set up options depending on tmux version.
# Use @tpm_plugins instead of @plugin, the latter does not work within
# line-continuation.
#if '[ $(printf "2.1\n`tmux -V | cut -d\  -f2`\n" | sort -V | head -1) = 2.1 ]' \
#"\
#	set -g mouse on; \
#	set -g @tpm_plugins 'nhdaly/tmux-scroll-copy-mode'; \
#" "\
#	setw -g mode-mouse on; \
#	set -g mouse-resize-pane on; \
#	set -g mouse-select-pane on; \
#	set -g mouse-select-window on; \
#"


# List of plugins
set -g @plugin 'tmux-plugins/tpm'

# Initialize Tmux Plugin Manager (keep this line at the very bottom)
if '[ $(printf "1.9\n`tmux -V | cut -d\  -f2`\n" | sort -V | head -1) = 1.9 ]' \
"\
	run '~/.tmux/plugins/tpm/tpm'; \
"
